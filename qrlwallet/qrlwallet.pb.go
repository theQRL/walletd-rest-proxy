// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: qrlwallet.proto

package qrlwallet

import (
	generated "github.com/theQRL/walletd-rest-proxy/generated"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddNewAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height       uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	HashFunction string `protobuf:"bytes,2,opt,name=hash_function,json=hashFunction,proto3" json:"hash_function,omitempty"`
}

func (x *AddNewAddressReq) Reset() {
	*x = AddNewAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewAddressReq) ProtoMessage() {}

func (x *AddNewAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewAddressReq.ProtoReflect.Descriptor instead.
func (*AddNewAddressReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{0}
}

func (x *AddNewAddressReq) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AddNewAddressReq) GetHashFunction() string {
	if x != nil {
		return x.HashFunction
	}
	return ""
}

type AddNewAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddNewAddressResp) Reset() {
	*x = AddNewAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewAddressResp) ProtoMessage() {}

func (x *AddNewAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewAddressResp.ProtoReflect.Descriptor instead.
func (*AddNewAddressResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{1}
}

func (x *AddNewAddressResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddNewAddressResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddNewAddressResp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddNewAddressWithSlavesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height         uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"` // Height of Master Address
	NumberOfSlaves uint64 `protobuf:"varint,2,opt,name=number_of_slaves,json=numberOfSlaves,proto3" json:"number_of_slaves,omitempty"`
	HashFunction   string `protobuf:"bytes,3,opt,name=hash_function,json=hashFunction,proto3" json:"hash_function,omitempty"`
}

func (x *AddNewAddressWithSlavesReq) Reset() {
	*x = AddNewAddressWithSlavesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewAddressWithSlavesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewAddressWithSlavesReq) ProtoMessage() {}

func (x *AddNewAddressWithSlavesReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewAddressWithSlavesReq.ProtoReflect.Descriptor instead.
func (*AddNewAddressWithSlavesReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{2}
}

func (x *AddNewAddressWithSlavesReq) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AddNewAddressWithSlavesReq) GetNumberOfSlaves() uint64 {
	if x != nil {
		return x.NumberOfSlaves
	}
	return 0
}

func (x *AddNewAddressWithSlavesReq) GetHashFunction() string {
	if x != nil {
		return x.HashFunction
	}
	return ""
}

type AddAddressFromSeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed string `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"` // Seed can be either hexseed or mnemonic
}

func (x *AddAddressFromSeedReq) Reset() {
	*x = AddAddressFromSeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressFromSeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressFromSeedReq) ProtoMessage() {}

func (x *AddAddressFromSeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressFromSeedReq.ProtoReflect.Descriptor instead.
func (*AddAddressFromSeedReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{3}
}

func (x *AddAddressFromSeedReq) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

type AddAddressFromSeedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddAddressFromSeedResp) Reset() {
	*x = AddAddressFromSeedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressFromSeedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressFromSeedResp) ProtoMessage() {}

func (x *AddAddressFromSeedResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressFromSeedResp.ProtoReflect.Descriptor instead.
func (*AddAddressFromSeedResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{4}
}

func (x *AddAddressFromSeedResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddAddressFromSeedResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddAddressFromSeedResp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListAddressesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAddressesReq) Reset() {
	*x = ListAddressesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAddressesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressesReq) ProtoMessage() {}

func (x *ListAddressesReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressesReq.ProtoReflect.Descriptor instead.
func (*ListAddressesReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{5}
}

type ListAddressesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error     string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListAddressesResp) Reset() {
	*x = ListAddressesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAddressesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressesResp) ProtoMessage() {}

func (x *ListAddressesResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressesResp.ProtoReflect.Descriptor instead.
func (*ListAddressesResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{6}
}

func (x *ListAddressesResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAddressesResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ListAddressesResp) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type RemoveAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RemoveAddressReq) Reset() {
	*x = RemoveAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddressReq) ProtoMessage() {}

func (x *RemoveAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddressReq.ProtoReflect.Descriptor instead.
func (*RemoveAddressReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RemoveAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RemoveAddressResp) Reset() {
	*x = RemoveAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddressResp) ProtoMessage() {}

func (x *RemoveAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddressResp.ProtoReflect.Descriptor instead.
func (*RemoveAddressResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveAddressResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RemoveAddressResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ValidAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ValidAddressReq) Reset() {
	*x = ValidAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidAddressReq) ProtoMessage() {}

func (x *ValidAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidAddressReq.ProtoReflect.Descriptor instead.
func (*ValidAddressReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{9}
}

func (x *ValidAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ValidAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Valid string `protobuf:"bytes,3,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidAddressResp) Reset() {
	*x = ValidAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidAddressResp) ProtoMessage() {}

func (x *ValidAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidAddressResp.ProtoReflect.Descriptor instead.
func (*ValidAddressResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{10}
}

func (x *ValidAddressResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidAddressResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidAddressResp) GetValid() string {
	if x != nil {
		return x.Valid
	}
	return ""
}

type EncryptWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *EncryptWalletReq) Reset() {
	*x = EncryptWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptWalletReq) ProtoMessage() {}

func (x *EncryptWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptWalletReq.ProtoReflect.Descriptor instead.
func (*EncryptWalletReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{11}
}

func (x *EncryptWalletReq) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type EncryptWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EncryptWalletResp) Reset() {
	*x = EncryptWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptWalletResp) ProtoMessage() {}

func (x *EncryptWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptWalletResp.ProtoReflect.Descriptor instead.
func (*EncryptWalletResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{12}
}

func (x *EncryptWalletResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EncryptWalletResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnlockWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *UnlockWalletReq) Reset() {
	*x = UnlockWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletReq) ProtoMessage() {}

func (x *UnlockWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletReq.ProtoReflect.Descriptor instead.
func (*UnlockWalletReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{13}
}

func (x *UnlockWalletReq) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type UnlockWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UnlockWalletResp) Reset() {
	*x = UnlockWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletResp) ProtoMessage() {}

func (x *UnlockWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletResp.ProtoReflect.Descriptor instead.
func (*UnlockWalletResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{14}
}

func (x *UnlockWalletResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UnlockWalletResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LockWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockWalletReq) Reset() {
	*x = LockWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletReq) ProtoMessage() {}

func (x *LockWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletReq.ProtoReflect.Descriptor instead.
func (*LockWalletReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{15}
}

type LockWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LockWalletResp) Reset() {
	*x = LockWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletResp) ProtoMessage() {}

func (x *LockWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletResp.ProtoReflect.Descriptor instead.
func (*LockWalletResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{16}
}

func (x *LockWalletResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LockWalletResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetRecoverySeedsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetRecoverySeedsReq) Reset() {
	*x = GetRecoverySeedsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecoverySeedsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecoverySeedsReq) ProtoMessage() {}

func (x *GetRecoverySeedsReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecoverySeedsReq.ProtoReflect.Descriptor instead.
func (*GetRecoverySeedsReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{17}
}

func (x *GetRecoverySeedsReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetRecoverySeedsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Hexseed  string `protobuf:"bytes,3,opt,name=hexseed,proto3" json:"hexseed,omitempty"`
	Mnemonic string `protobuf:"bytes,4,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *GetRecoverySeedsResp) Reset() {
	*x = GetRecoverySeedsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecoverySeedsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecoverySeedsResp) ProtoMessage() {}

func (x *GetRecoverySeedsResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecoverySeedsResp.ProtoReflect.Descriptor instead.
func (*GetRecoverySeedsResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{18}
}

func (x *GetRecoverySeedsResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecoverySeedsResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetRecoverySeedsResp) GetHexseed() string {
	if x != nil {
		return x.Hexseed
	}
	return ""
}

func (x *GetRecoverySeedsResp) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type GetWalletInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWalletInfoReq) Reset() {
	*x = GetWalletInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoReq) ProtoMessage() {}

func (x *GetWalletInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoReq.ProtoReflect.Descriptor instead.
func (*GetWalletInfoReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{19}
}

type GetWalletInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error        string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version      uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	AddressCount uint64 `protobuf:"varint,4,opt,name=address_count,json=addressCount,proto3" json:"address_count,omitempty"`
	IsEncrypted  bool   `protobuf:"varint,5,opt,name=is_encrypted,json=isEncrypted,proto3" json:"is_encrypted,omitempty"`
}

func (x *GetWalletInfoResp) Reset() {
	*x = GetWalletInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoResp) ProtoMessage() {}

func (x *GetWalletInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoResp.ProtoReflect.Descriptor instead.
func (*GetWalletInfoResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{20}
}

func (x *GetWalletInfoResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetWalletInfoResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetWalletInfoResp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetWalletInfoResp) GetAddressCount() uint64 {
	if x != nil {
		return x.AddressCount
	}
	return 0
}

func (x *GetWalletInfoResp) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

type RelayTransferTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressesTo   []string `protobuf:"bytes,1,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"`
	Amounts       []uint64 `protobuf:"varint,2,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,4,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
	SignerAddress string   `protobuf:"bytes,5,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	OtsIndex      uint64   `protobuf:"varint,6,opt,name=ots_index,json=otsIndex,proto3" json:"ots_index,omitempty"`
}

func (x *RelayTransferTxnReq) Reset() {
	*x = RelayTransferTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTxnReq) ProtoMessage() {}

func (x *RelayTransferTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTxnReq.ProtoReflect.Descriptor instead.
func (*RelayTransferTxnReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{21}
}

func (x *RelayTransferTxnReq) GetAddressesTo() []string {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *RelayTransferTxnReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTransferTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTransferTxnReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

func (x *RelayTransferTxnReq) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

func (x *RelayTransferTxnReq) GetOtsIndex() uint64 {
	if x != nil {
		return x.OtsIndex
	}
	return 0
}

type RelayTransferTxnBySlaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressesTo   []string `protobuf:"bytes,1,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"`
	Amounts       []uint64 `protobuf:"varint,2,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,4,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
}

func (x *RelayTransferTxnBySlaveReq) Reset() {
	*x = RelayTransferTxnBySlaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTxnBySlaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTxnBySlaveReq) ProtoMessage() {}

func (x *RelayTransferTxnBySlaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTxnBySlaveReq.ProtoReflect.Descriptor instead.
func (*RelayTransferTxnBySlaveReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{22}
}

func (x *RelayTransferTxnBySlaveReq) GetAddressesTo() []string {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *RelayTransferTxnBySlaveReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTransferTxnBySlaveReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTransferTxnBySlaveReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

type RelayMessageTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Fee           uint64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string `protobuf:"bytes,3,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
	SignerAddress string `protobuf:"bytes,4,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	OtsIndex      uint64 `protobuf:"varint,5,opt,name=ots_index,json=otsIndex,proto3" json:"ots_index,omitempty"`
}

func (x *RelayMessageTxnReq) Reset() {
	*x = RelayMessageTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayMessageTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayMessageTxnReq) ProtoMessage() {}

func (x *RelayMessageTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayMessageTxnReq.ProtoReflect.Descriptor instead.
func (*RelayMessageTxnReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{23}
}

func (x *RelayMessageTxnReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RelayMessageTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayMessageTxnReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

func (x *RelayMessageTxnReq) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

func (x *RelayMessageTxnReq) GetOtsIndex() uint64 {
	if x != nil {
		return x.OtsIndex
	}
	return 0
}

type RelayMessageTxnBySlaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Fee           uint64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string `protobuf:"bytes,3,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
}

func (x *RelayMessageTxnBySlaveReq) Reset() {
	*x = RelayMessageTxnBySlaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayMessageTxnBySlaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayMessageTxnBySlaveReq) ProtoMessage() {}

func (x *RelayMessageTxnBySlaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayMessageTxnBySlaveReq.ProtoReflect.Descriptor instead.
func (*RelayMessageTxnBySlaveReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{24}
}

func (x *RelayMessageTxnBySlaveReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RelayMessageTxnBySlaveReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayMessageTxnBySlaveReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

type RelayTokenTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner         string   `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Decimals      uint64   `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Addresses     []string `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Amounts       []uint64 `protobuf:"varint,6,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,8,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
	SignerAddress string   `protobuf:"bytes,9,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	OtsIndex      uint64   `protobuf:"varint,10,opt,name=ots_index,json=otsIndex,proto3" json:"ots_index,omitempty"`
}

func (x *RelayTokenTxnReq) Reset() {
	*x = RelayTokenTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTokenTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTokenTxnReq) ProtoMessage() {}

func (x *RelayTokenTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTokenTxnReq.ProtoReflect.Descriptor instead.
func (*RelayTokenTxnReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{25}
}

func (x *RelayTokenTxnReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RelayTokenTxnReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RelayTokenTxnReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RelayTokenTxnReq) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *RelayTokenTxnReq) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *RelayTokenTxnReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTokenTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTokenTxnReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

func (x *RelayTokenTxnReq) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

func (x *RelayTokenTxnReq) GetOtsIndex() uint64 {
	if x != nil {
		return x.OtsIndex
	}
	return 0
}

type RelayTokenTxnBySlaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol        string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner         string   `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Decimals      uint64   `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Addresses     []string `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Amounts       []uint64 `protobuf:"varint,6,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,8,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
}

func (x *RelayTokenTxnBySlaveReq) Reset() {
	*x = RelayTokenTxnBySlaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTokenTxnBySlaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTokenTxnBySlaveReq) ProtoMessage() {}

func (x *RelayTokenTxnBySlaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTokenTxnBySlaveReq.ProtoReflect.Descriptor instead.
func (*RelayTokenTxnBySlaveReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{26}
}

func (x *RelayTokenTxnBySlaveReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RelayTokenTxnBySlaveReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RelayTokenTxnBySlaveReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RelayTokenTxnBySlaveReq) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *RelayTokenTxnBySlaveReq) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *RelayTokenTxnBySlaveReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTokenTxnBySlaveReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTokenTxnBySlaveReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

type RelayTransferTokenTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressesTo   []string `protobuf:"bytes,1,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"`
	TokenTxhash   string   `protobuf:"bytes,2,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	Amounts       []uint64 `protobuf:"varint,3,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,5,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
	SignerAddress string   `protobuf:"bytes,6,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	OtsIndex      uint64   `protobuf:"varint,7,opt,name=ots_index,json=otsIndex,proto3" json:"ots_index,omitempty"`
}

func (x *RelayTransferTokenTxnReq) Reset() {
	*x = RelayTransferTokenTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTokenTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTokenTxnReq) ProtoMessage() {}

func (x *RelayTransferTokenTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTokenTxnReq.ProtoReflect.Descriptor instead.
func (*RelayTransferTokenTxnReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{27}
}

func (x *RelayTransferTokenTxnReq) GetAddressesTo() []string {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *RelayTransferTokenTxnReq) GetTokenTxhash() string {
	if x != nil {
		return x.TokenTxhash
	}
	return ""
}

func (x *RelayTransferTokenTxnReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTransferTokenTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTransferTokenTxnReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

func (x *RelayTransferTokenTxnReq) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

func (x *RelayTransferTokenTxnReq) GetOtsIndex() uint64 {
	if x != nil {
		return x.OtsIndex
	}
	return 0
}

type RelayTransferTokenTxnBySlaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressesTo   []string `protobuf:"bytes,1,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"`
	TokenTxhash   string   `protobuf:"bytes,2,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	Amounts       []uint64 `protobuf:"varint,3,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee           uint64   `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,5,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
}

func (x *RelayTransferTokenTxnBySlaveReq) Reset() {
	*x = RelayTransferTokenTxnBySlaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTokenTxnBySlaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTokenTxnBySlaveReq) ProtoMessage() {}

func (x *RelayTransferTokenTxnBySlaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTokenTxnBySlaveReq.ProtoReflect.Descriptor instead.
func (*RelayTransferTokenTxnBySlaveReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{28}
}

func (x *RelayTransferTokenTxnBySlaveReq) GetAddressesTo() []string {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *RelayTransferTokenTxnBySlaveReq) GetTokenTxhash() string {
	if x != nil {
		return x.TokenTxhash
	}
	return ""
}

func (x *RelayTransferTokenTxnBySlaveReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *RelayTransferTokenTxnBySlaveReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelayTransferTokenTxnBySlaveReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

type RelaySlaveTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlavePks      [][]byte `protobuf:"bytes,1,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	AccessTypes   []uint32 `protobuf:"varint,2,rep,packed,name=access_types,json=accessTypes,proto3" json:"access_types,omitempty"`
	Fee           uint64   `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,4,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
	SignerAddress string   `protobuf:"bytes,5,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
	OtsIndex      uint64   `protobuf:"varint,6,opt,name=ots_index,json=otsIndex,proto3" json:"ots_index,omitempty"`
}

func (x *RelaySlaveTxnReq) Reset() {
	*x = RelaySlaveTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySlaveTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySlaveTxnReq) ProtoMessage() {}

func (x *RelaySlaveTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySlaveTxnReq.ProtoReflect.Descriptor instead.
func (*RelaySlaveTxnReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{29}
}

func (x *RelaySlaveTxnReq) GetSlavePks() [][]byte {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *RelaySlaveTxnReq) GetAccessTypes() []uint32 {
	if x != nil {
		return x.AccessTypes
	}
	return nil
}

func (x *RelaySlaveTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelaySlaveTxnReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

func (x *RelaySlaveTxnReq) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

func (x *RelaySlaveTxnReq) GetOtsIndex() uint64 {
	if x != nil {
		return x.OtsIndex
	}
	return 0
}

type RelaySlaveTxnBySlaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlavePks      [][]byte `protobuf:"bytes,1,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	AccessTypes   []uint32 `protobuf:"varint,2,rep,packed,name=access_types,json=accessTypes,proto3" json:"access_types,omitempty"`
	Fee           uint64   `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	MasterAddress string   `protobuf:"bytes,4,opt,name=master_address,json=masterAddress,proto3" json:"master_address,omitempty"`
}

func (x *RelaySlaveTxnBySlaveReq) Reset() {
	*x = RelaySlaveTxnBySlaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySlaveTxnBySlaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySlaveTxnBySlaveReq) ProtoMessage() {}

func (x *RelaySlaveTxnBySlaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySlaveTxnBySlaveReq.ProtoReflect.Descriptor instead.
func (*RelaySlaveTxnBySlaveReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{30}
}

func (x *RelaySlaveTxnBySlaveReq) GetSlavePks() [][]byte {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *RelaySlaveTxnBySlaveReq) GetAccessTypes() []uint32 {
	if x != nil {
		return x.AccessTypes
	}
	return nil
}

func (x *RelaySlaveTxnBySlaveReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *RelaySlaveTxnBySlaveReq) GetMasterAddress() string {
	if x != nil {
		return x.MasterAddress
	}
	return ""
}

type RelayTxnResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Tx    *PlainTransaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *RelayTxnResp) Reset() {
	*x = RelayTxnResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTxnResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTxnResp) ProtoMessage() {}

func (x *RelayTxnResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTxnResp.ProtoReflect.Descriptor instead.
func (*RelayTxnResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{31}
}

func (x *RelayTxnResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RelayTxnResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RelayTxnResp) GetTx() *PlainTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type ChangePassphraseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassphrase string `protobuf:"bytes,1,opt,name=oldPassphrase,proto3" json:"oldPassphrase,omitempty"`
	NewPassphrase string `protobuf:"bytes,2,opt,name=newPassphrase,proto3" json:"newPassphrase,omitempty"`
}

func (x *ChangePassphraseReq) Reset() {
	*x = ChangePassphraseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePassphraseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePassphraseReq) ProtoMessage() {}

func (x *ChangePassphraseReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePassphraseReq.ProtoReflect.Descriptor instead.
func (*ChangePassphraseReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{32}
}

func (x *ChangePassphraseReq) GetOldPassphrase() string {
	if x != nil {
		return x.OldPassphrase
	}
	return ""
}

func (x *ChangePassphraseReq) GetNewPassphrase() string {
	if x != nil {
		return x.NewPassphrase
	}
	return ""
}

type ChangePassphraseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ChangePassphraseResp) Reset() {
	*x = ChangePassphraseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePassphraseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePassphraseResp) ProtoMessage() {}

func (x *ChangePassphraseResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePassphraseResp.ProtoReflect.Descriptor instead.
func (*ChangePassphraseResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{33}
}

func (x *ChangePassphraseResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChangePassphraseResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TransactionsByAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *TransactionsByAddressReq) Reset() {
	*x = TransactionsByAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsByAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsByAddressReq) ProtoMessage() {}

func (x *TransactionsByAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsByAddressReq.ProtoReflect.Descriptor instead.
func (*TransactionsByAddressReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{34}
}

func (x *TransactionsByAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TransactionsByAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             uint32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error            string                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	MiniTransactions []*generated.MiniTransaction `protobuf:"bytes,3,rep,name=mini_transactions,json=miniTransactions,proto3" json:"mini_transactions,omitempty"`
	Balance          uint64                       `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *TransactionsByAddressResp) Reset() {
	*x = TransactionsByAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsByAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsByAddressResp) ProtoMessage() {}

func (x *TransactionsByAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsByAddressResp.ProtoReflect.Descriptor instead.
func (*TransactionsByAddressResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{35}
}

func (x *TransactionsByAddressResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransactionsByAddressResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TransactionsByAddressResp) GetMiniTransactions() []*generated.MiniTransaction {
	if x != nil {
		return x.MiniTransactions
	}
	return nil
}

func (x *TransactionsByAddressResp) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type PaginatedTransactionsByAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ItemPerPage uint64 `protobuf:"varint,2,opt,name=item_per_page,json=itemPerPage,proto3" json:"item_per_page,omitempty"`
	PageNumber  uint64 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *PaginatedTransactionsByAddressReq) Reset() {
	*x = PaginatedTransactionsByAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedTransactionsByAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedTransactionsByAddressReq) ProtoMessage() {}

func (x *PaginatedTransactionsByAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedTransactionsByAddressReq.ProtoReflect.Descriptor instead.
func (*PaginatedTransactionsByAddressReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{36}
}

func (x *PaginatedTransactionsByAddressReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PaginatedTransactionsByAddressReq) GetItemPerPage() uint64 {
	if x != nil {
		return x.ItemPerPage
	}
	return 0
}

func (x *PaginatedTransactionsByAddressReq) GetPageNumber() uint64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type PaginatedTransactionsByAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             uint32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error            string                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	MiniTransactions []*generated.MiniTransaction `protobuf:"bytes,3,rep,name=mini_transactions,json=miniTransactions,proto3" json:"mini_transactions,omitempty"`
	Balance          uint64                       `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *PaginatedTransactionsByAddressResp) Reset() {
	*x = PaginatedTransactionsByAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedTransactionsByAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedTransactionsByAddressResp) ProtoMessage() {}

func (x *PaginatedTransactionsByAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedTransactionsByAddressResp.ProtoReflect.Descriptor instead.
func (*PaginatedTransactionsByAddressResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{37}
}

func (x *PaginatedTransactionsByAddressResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PaginatedTransactionsByAddressResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PaginatedTransactionsByAddressResp) GetMiniTransactions() []*generated.MiniTransaction {
	if x != nil {
		return x.MiniTransactions
	}
	return nil
}

func (x *PaginatedTransactionsByAddressResp) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{38}
}

func (x *TransactionReq) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type TransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error           string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Tx              *PlainTransaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	Confirmations   string            `protobuf:"bytes,4,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockNumber     uint64            `protobuf:"varint,5,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockHeaderHash string            `protobuf:"bytes,6,opt,name=block_header_hash,json=blockHeaderHash,proto3" json:"block_header_hash,omitempty"`
}

func (x *TransactionResp) Reset() {
	*x = TransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResp) ProtoMessage() {}

func (x *TransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResp.ProtoReflect.Descriptor instead.
func (*TransactionResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{39}
}

func (x *TransactionResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransactionResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TransactionResp) GetTx() *PlainTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionResp) GetConfirmations() string {
	if x != nil {
		return x.Confirmations
	}
	return ""
}

func (x *TransactionResp) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TransactionResp) GetBlockHeaderHash() string {
	if x != nil {
		return x.BlockHeaderHash
	}
	return ""
}

type BalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *BalanceReq) Reset() {
	*x = BalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceReq) ProtoMessage() {}

func (x *BalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceReq.ProtoReflect.Descriptor instead.
func (*BalanceReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{40}
}

func (x *BalanceReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type BalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Balance string `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceResp) Reset() {
	*x = BalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResp) ProtoMessage() {}

func (x *BalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResp.ProtoReflect.Descriptor instead.
func (*BalanceResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{41}
}

func (x *BalanceResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BalanceResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BalanceResp) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type TotalBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TotalBalanceReq) Reset() {
	*x = TotalBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalBalanceReq) ProtoMessage() {}

func (x *TotalBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalBalanceReq.ProtoReflect.Descriptor instead.
func (*TotalBalanceReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{42}
}

type TotalBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Balance string `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *TotalBalanceResp) Reset() {
	*x = TotalBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalBalanceResp) ProtoMessage() {}

func (x *TotalBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalBalanceResp.ProtoReflect.Descriptor instead.
func (*TotalBalanceResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{43}
}

func (x *TotalBalanceResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TotalBalanceResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TotalBalanceResp) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type OTSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *OTSReq) Reset() {
	*x = OTSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTSReq) ProtoMessage() {}

func (x *OTSReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTSReq.ProtoReflect.Descriptor instead.
func (*OTSReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{44}
}

func (x *OTSReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type OTSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error               string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	OtsBitfield         [][]byte `protobuf:"bytes,3,rep,name=ots_bitfield,json=otsBitfield,proto3" json:"ots_bitfield,omitempty"`
	NextUnusedOtsIndex  uint64   `protobuf:"varint,4,opt,name=next_unused_ots_index,json=nextUnusedOtsIndex,proto3" json:"next_unused_ots_index,omitempty"`
	UnusedOtsIndexFound bool     `protobuf:"varint,5,opt,name=unused_ots_index_found,json=unusedOtsIndexFound,proto3" json:"unused_ots_index_found,omitempty"`
}

func (x *OTSResp) Reset() {
	*x = OTSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTSResp) ProtoMessage() {}

func (x *OTSResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTSResp.ProtoReflect.Descriptor instead.
func (*OTSResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{45}
}

func (x *OTSResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OTSResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *OTSResp) GetOtsBitfield() [][]byte {
	if x != nil {
		return x.OtsBitfield
	}
	return nil
}

func (x *OTSResp) GetNextUnusedOtsIndex() uint64 {
	if x != nil {
		return x.NextUnusedOtsIndex
	}
	return 0
}

func (x *OTSResp) GetUnusedOtsIndexFound() bool {
	if x != nil {
		return x.UnusedOtsIndexFound
	}
	return false
}

type HeightReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeightReq) Reset() {
	*x = HeightReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightReq) ProtoMessage() {}

func (x *HeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightReq.ProtoReflect.Descriptor instead.
func (*HeightReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{46}
}

type HeightResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Height uint64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *HeightResp) Reset() {
	*x = HeightResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeightResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightResp) ProtoMessage() {}

func (x *HeightResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightResp.ProtoReflect.Descriptor instead.
func (*HeightResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{47}
}

func (x *HeightResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HeightResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HeightResp) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type BlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderHash string `protobuf:"bytes,1,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
}

func (x *BlockReq) Reset() {
	*x = BlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReq) ProtoMessage() {}

func (x *BlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReq.ProtoReflect.Descriptor instead.
func (*BlockReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{48}
}

func (x *BlockReq) GetHeaderHash() string {
	if x != nil {
		return x.HeaderHash
	}
	return ""
}

type BlockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Block *PlainBlock `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockResp) Reset() {
	*x = BlockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResp) ProtoMessage() {}

func (x *BlockResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResp.ProtoReflect.Descriptor instead.
func (*BlockResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{49}
}

func (x *BlockResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BlockResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BlockResp) GetBlock() *PlainBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

type BlockByNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *BlockByNumberReq) Reset() {
	*x = BlockByNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockByNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockByNumberReq) ProtoMessage() {}

func (x *BlockByNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockByNumberReq.ProtoReflect.Descriptor instead.
func (*BlockByNumberReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{50}
}

func (x *BlockByNumberReq) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type AddressFromPKReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pk string `protobuf:"bytes,1,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *AddressFromPKReq) Reset() {
	*x = AddressFromPKReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFromPKReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFromPKReq) ProtoMessage() {}

func (x *AddressFromPKReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFromPKReq.ProtoReflect.Descriptor instead.
func (*AddressFromPKReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{51}
}

func (x *AddressFromPKReq) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

type AddressFromPKResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressFromPKResp) Reset() {
	*x = AddressFromPKResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFromPKResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFromPKResp) ProtoMessage() {}

func (x *AddressFromPKResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFromPKResp.ProtoReflect.Descriptor instead.
func (*AddressFromPKResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{52}
}

func (x *AddressFromPKResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddressFromPKResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddressFromPKResp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NodeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeInfoReq) Reset() {
	*x = NodeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfoReq) ProtoMessage() {}

func (x *NodeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfoReq.ProtoReflect.Descriptor instead.
func (*NodeInfoReq) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{53}
}

type NodeInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error          string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version        string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	NumConnections string `protobuf:"bytes,4,opt,name=num_connections,json=numConnections,proto3" json:"num_connections,omitempty"`
	NumKnownPeers  string `protobuf:"bytes,5,opt,name=num_known_peers,json=numKnownPeers,proto3" json:"num_known_peers,omitempty"`
	Uptime         uint64 `protobuf:"varint,6,opt,name=uptime,proto3" json:"uptime,omitempty"` // Uptime in seconds
	BlockHeight    uint64 `protobuf:"varint,7,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockLastHash  string `protobuf:"bytes,8,opt,name=block_last_hash,json=blockLastHash,proto3" json:"block_last_hash,omitempty"`
	NetworkId      string `protobuf:"bytes,9,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
}

func (x *NodeInfoResp) Reset() {
	*x = NodeInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfoResp) ProtoMessage() {}

func (x *NodeInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfoResp.ProtoReflect.Descriptor instead.
func (*NodeInfoResp) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{54}
}

func (x *NodeInfoResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NodeInfoResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *NodeInfoResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeInfoResp) GetNumConnections() string {
	if x != nil {
		return x.NumConnections
	}
	return ""
}

func (x *NodeInfoResp) GetNumKnownPeers() string {
	if x != nil {
		return x.NumKnownPeers
	}
	return ""
}

func (x *NodeInfoResp) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *NodeInfoResp) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *NodeInfoResp) GetBlockLastHash() string {
	if x != nil {
		return x.BlockLastHash
	}
	return ""
}

func (x *NodeInfoResp) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type PlainGenesisBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance uint64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *PlainGenesisBalance) Reset() {
	*x = PlainGenesisBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainGenesisBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainGenesisBalance) ProtoMessage() {}

func (x *PlainGenesisBalance) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainGenesisBalance.ProtoReflect.Descriptor instead.
func (*PlainGenesisBalance) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{55}
}

func (x *PlainGenesisBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PlainGenesisBalance) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type PlainAddressAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PlainAddressAmount) Reset() {
	*x = PlainAddressAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainAddressAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainAddressAmount) ProtoMessage() {}

func (x *PlainAddressAmount) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainAddressAmount.ProtoReflect.Descriptor instead.
func (*PlainAddressAmount) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{56}
}

func (x *PlainAddressAmount) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PlainAddressAmount) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PlainTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr      string `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	Fee             uint64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	PublicKey       string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature       string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce           uint64 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TransactionHash string `protobuf:"bytes,6,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	SignerAddr      string `protobuf:"bytes,7,opt,name=signer_addr,json=signerAddr,proto3" json:"signer_addr,omitempty"`
	// Types that are assignable to TransactionType:
	//
	//	*PlainTransaction_Transfer_
	//	*PlainTransaction_Coinbase
	//	*PlainTransaction_LatticePK
	//	*PlainTransaction_Message_
	//	*PlainTransaction_Token_
	//	*PlainTransaction_TransferToken_
	//	*PlainTransaction_Slave_
	TransactionType isPlainTransaction_TransactionType `protobuf_oneof:"transactionType"`
}

func (x *PlainTransaction) Reset() {
	*x = PlainTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction) ProtoMessage() {}

func (x *PlainTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction.ProtoReflect.Descriptor instead.
func (*PlainTransaction) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57}
}

func (x *PlainTransaction) GetMasterAddr() string {
	if x != nil {
		return x.MasterAddr
	}
	return ""
}

func (x *PlainTransaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PlainTransaction) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *PlainTransaction) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *PlainTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PlainTransaction) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *PlainTransaction) GetSignerAddr() string {
	if x != nil {
		return x.SignerAddr
	}
	return ""
}

func (m *PlainTransaction) GetTransactionType() isPlainTransaction_TransactionType {
	if m != nil {
		return m.TransactionType
	}
	return nil
}

func (x *PlainTransaction) GetTransfer() *PlainTransaction_Transfer {
	if x, ok := x.GetTransactionType().(*PlainTransaction_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

func (x *PlainTransaction) GetCoinbase() *PlainTransaction_CoinBase {
	if x, ok := x.GetTransactionType().(*PlainTransaction_Coinbase); ok {
		return x.Coinbase
	}
	return nil
}

func (x *PlainTransaction) GetLatticePK() *PlainTransaction_LatticePublicKey {
	if x, ok := x.GetTransactionType().(*PlainTransaction_LatticePK); ok {
		return x.LatticePK
	}
	return nil
}

func (x *PlainTransaction) GetMessage() *PlainTransaction_Message {
	if x, ok := x.GetTransactionType().(*PlainTransaction_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *PlainTransaction) GetToken() *PlainTransaction_Token {
	if x, ok := x.GetTransactionType().(*PlainTransaction_Token_); ok {
		return x.Token
	}
	return nil
}

func (x *PlainTransaction) GetTransferToken() *PlainTransaction_TransferToken {
	if x, ok := x.GetTransactionType().(*PlainTransaction_TransferToken_); ok {
		return x.TransferToken
	}
	return nil
}

func (x *PlainTransaction) GetSlave() *PlainTransaction_Slave {
	if x, ok := x.GetTransactionType().(*PlainTransaction_Slave_); ok {
		return x.Slave
	}
	return nil
}

type isPlainTransaction_TransactionType interface {
	isPlainTransaction_TransactionType()
}

type PlainTransaction_Transfer_ struct {
	Transfer *PlainTransaction_Transfer `protobuf:"bytes,8,opt,name=transfer,proto3,oneof"`
}

type PlainTransaction_Coinbase struct {
	Coinbase *PlainTransaction_CoinBase `protobuf:"bytes,9,opt,name=coinbase,proto3,oneof"`
}

type PlainTransaction_LatticePK struct {
	LatticePK *PlainTransaction_LatticePublicKey `protobuf:"bytes,10,opt,name=latticePK,proto3,oneof"`
}

type PlainTransaction_Message_ struct {
	Message *PlainTransaction_Message `protobuf:"bytes,11,opt,name=message,proto3,oneof"`
}

type PlainTransaction_Token_ struct {
	Token *PlainTransaction_Token `protobuf:"bytes,12,opt,name=token,proto3,oneof"`
}

type PlainTransaction_TransferToken_ struct {
	TransferToken *PlainTransaction_TransferToken `protobuf:"bytes,13,opt,name=transfer_token,json=transferToken,proto3,oneof"`
}

type PlainTransaction_Slave_ struct {
	Slave *PlainTransaction_Slave `protobuf:"bytes,14,opt,name=slave,proto3,oneof"`
}

func (*PlainTransaction_Transfer_) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_Coinbase) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_LatticePK) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_Message_) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_Token_) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_TransferToken_) isPlainTransaction_TransactionType() {}

func (*PlainTransaction_Slave_) isPlainTransaction_TransactionType() {}

type PlainBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Header
	HashHeader       string `protobuf:"bytes,1,opt,name=hash_header,json=hashHeader,proto3" json:"hash_header,omitempty"`
	BlockNumber      uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TimestampSeconds uint64 `protobuf:"varint,3,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	HashHeaderPrev   string `protobuf:"bytes,4,opt,name=hash_header_prev,json=hashHeaderPrev,proto3" json:"hash_header_prev,omitempty"`
	RewardBlock      uint64 `protobuf:"varint,5,opt,name=reward_block,json=rewardBlock,proto3" json:"reward_block,omitempty"`
	RewardFee        uint64 `protobuf:"varint,6,opt,name=reward_fee,json=rewardFee,proto3" json:"reward_fee,omitempty"`
	MerkleRoot       string `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	MiningNonce      uint32 `protobuf:"varint,8,opt,name=mining_nonce,json=miningNonce,proto3" json:"mining_nonce,omitempty"`
	ExtraNonce       uint64 `protobuf:"varint,9,opt,name=extra_nonce,json=extraNonce,proto3" json:"extra_nonce,omitempty"`
}

func (x *PlainBlockHeader) Reset() {
	*x = PlainBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainBlockHeader) ProtoMessage() {}

func (x *PlainBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainBlockHeader.ProtoReflect.Descriptor instead.
func (*PlainBlockHeader) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{58}
}

func (x *PlainBlockHeader) GetHashHeader() string {
	if x != nil {
		return x.HashHeader
	}
	return ""
}

func (x *PlainBlockHeader) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *PlainBlockHeader) GetTimestampSeconds() uint64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

func (x *PlainBlockHeader) GetHashHeaderPrev() string {
	if x != nil {
		return x.HashHeaderPrev
	}
	return ""
}

func (x *PlainBlockHeader) GetRewardBlock() uint64 {
	if x != nil {
		return x.RewardBlock
	}
	return 0
}

func (x *PlainBlockHeader) GetRewardFee() uint64 {
	if x != nil {
		return x.RewardFee
	}
	return 0
}

func (x *PlainBlockHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *PlainBlockHeader) GetMiningNonce() uint32 {
	if x != nil {
		return x.MiningNonce
	}
	return 0
}

func (x *PlainBlockHeader) GetExtraNonce() uint64 {
	if x != nil {
		return x.ExtraNonce
	}
	return 0
}

type PlainBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *PlainBlockHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Transactions   []*PlainTransaction    `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	GenesisBalance []*PlainGenesisBalance `protobuf:"bytes,3,rep,name=genesis_balance,json=genesisBalance,proto3" json:"genesis_balance,omitempty"`
}

func (x *PlainBlock) Reset() {
	*x = PlainBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainBlock) ProtoMessage() {}

func (x *PlainBlock) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainBlock.ProtoReflect.Descriptor instead.
func (*PlainBlock) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{59}
}

func (x *PlainBlock) GetHeader() *PlainBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PlainBlock) GetTransactions() []*PlainTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *PlainBlock) GetGenesisBalance() []*PlainGenesisBalance {
	if x != nil {
		return x.GenesisBalance
	}
	return nil
}

// ////////
type PlainTransaction_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrsTo []string `protobuf:"bytes,1,rep,name=addrs_to,json=addrsTo,proto3" json:"addrs_to,omitempty"`
	Amounts []uint64 `protobuf:"varint,2,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *PlainTransaction_Transfer) Reset() {
	*x = PlainTransaction_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_Transfer) ProtoMessage() {}

func (x *PlainTransaction_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_Transfer.ProtoReflect.Descriptor instead.
func (*PlainTransaction_Transfer) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 0}
}

func (x *PlainTransaction_Transfer) GetAddrsTo() []string {
	if x != nil {
		return x.AddrsTo
	}
	return nil
}

func (x *PlainTransaction_Transfer) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type PlainTransaction_CoinBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrTo string `protobuf:"bytes,1,opt,name=addr_to,json=addrTo,proto3" json:"addr_to,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PlainTransaction_CoinBase) Reset() {
	*x = PlainTransaction_CoinBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_CoinBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_CoinBase) ProtoMessage() {}

func (x *PlainTransaction_CoinBase) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_CoinBase.ProtoReflect.Descriptor instead.
func (*PlainTransaction_CoinBase) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 1}
}

func (x *PlainTransaction_CoinBase) GetAddrTo() string {
	if x != nil {
		return x.AddrTo
	}
	return ""
}

func (x *PlainTransaction_CoinBase) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PlainTransaction_LatticePublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KyberPk     string `protobuf:"bytes,1,opt,name=kyber_pk,json=kyberPk,proto3" json:"kyber_pk,omitempty"`
	DilithiumPk string `protobuf:"bytes,2,opt,name=dilithium_pk,json=dilithiumPk,proto3" json:"dilithium_pk,omitempty"`
}

func (x *PlainTransaction_LatticePublicKey) Reset() {
	*x = PlainTransaction_LatticePublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_LatticePublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_LatticePublicKey) ProtoMessage() {}

func (x *PlainTransaction_LatticePublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_LatticePublicKey.ProtoReflect.Descriptor instead.
func (*PlainTransaction_LatticePublicKey) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 2}
}

func (x *PlainTransaction_LatticePublicKey) GetKyberPk() string {
	if x != nil {
		return x.KyberPk
	}
	return ""
}

func (x *PlainTransaction_LatticePublicKey) GetDilithiumPk() string {
	if x != nil {
		return x.DilithiumPk
	}
	return ""
}

type PlainTransaction_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHash string `protobuf:"bytes,1,opt,name=message_hash,json=messageHash,proto3" json:"message_hash,omitempty"`
}

func (x *PlainTransaction_Message) Reset() {
	*x = PlainTransaction_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_Message) ProtoMessage() {}

func (x *PlainTransaction_Message) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_Message.ProtoReflect.Descriptor instead.
func (*PlainTransaction_Message) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 3}
}

func (x *PlainTransaction_Message) GetMessageHash() string {
	if x != nil {
		return x.MessageHash
	}
	return ""
}

type PlainTransaction_Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol          string                `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name            string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner           string                `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Decimals        uint64                `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	InitialBalances []*PlainAddressAmount `protobuf:"bytes,5,rep,name=initial_balances,json=initialBalances,proto3" json:"initial_balances,omitempty"`
}

func (x *PlainTransaction_Token) Reset() {
	*x = PlainTransaction_Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_Token) ProtoMessage() {}

func (x *PlainTransaction_Token) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_Token.ProtoReflect.Descriptor instead.
func (*PlainTransaction_Token) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 4}
}

func (x *PlainTransaction_Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PlainTransaction_Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlainTransaction_Token) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *PlainTransaction_Token) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *PlainTransaction_Token) GetInitialBalances() []*PlainAddressAmount {
	if x != nil {
		return x.InitialBalances
	}
	return nil
}

type PlainTransaction_TransferToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenTxhash string   `protobuf:"bytes,1,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	AddrsTo     []string `protobuf:"bytes,2,rep,name=addrs_to,json=addrsTo,proto3" json:"addrs_to,omitempty"`
	Amounts     []uint64 `protobuf:"varint,3,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *PlainTransaction_TransferToken) Reset() {
	*x = PlainTransaction_TransferToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_TransferToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_TransferToken) ProtoMessage() {}

func (x *PlainTransaction_TransferToken) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_TransferToken.ProtoReflect.Descriptor instead.
func (*PlainTransaction_TransferToken) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 5}
}

func (x *PlainTransaction_TransferToken) GetTokenTxhash() string {
	if x != nil {
		return x.TokenTxhash
	}
	return ""
}

func (x *PlainTransaction_TransferToken) GetAddrsTo() []string {
	if x != nil {
		return x.AddrsTo
	}
	return nil
}

func (x *PlainTransaction_TransferToken) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type PlainTransaction_Slave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlavePks    []string `protobuf:"bytes,1,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	AccessTypes []uint32 `protobuf:"varint,2,rep,packed,name=access_types,json=accessTypes,proto3" json:"access_types,omitempty"`
}

func (x *PlainTransaction_Slave) Reset() {
	*x = PlainTransaction_Slave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrlwallet_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainTransaction_Slave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainTransaction_Slave) ProtoMessage() {}

func (x *PlainTransaction_Slave) ProtoReflect() protoreflect.Message {
	mi := &file_qrlwallet_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainTransaction_Slave.ProtoReflect.Descriptor instead.
func (*PlainTransaction_Slave) Descriptor() ([]byte, []int) {
	return file_qrlwallet_proto_rawDescGZIP(), []int{57, 6}
}

func (x *PlainTransaction_Slave) GetSlavePks() []string {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *PlainTransaction_Slave) GetAccessTypes() []uint32 {
	if x != nil {
		return x.AccessTypes
	}
	return nil
}

var File_qrlwallet_proto protoreflect.FileDescriptor

var file_qrlwallet_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x71, 0x72, 0x6c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x71, 0x72, 0x6c, 0x1a, 0x09, 0x71, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4f, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x68,
	0x61, 0x73, 0x68, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x57, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x6c,
	0x61, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x5b,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x10, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x3d, 0x0a,
	0x11, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x31, 0x0a, 0x0f,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22,
	0x3c, 0x0a, 0x10, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x0f, 0x0a,
	0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0x3a,
	0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x78, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x65, 0x78, 0x73, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x92, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x6e,
	0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xab, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6e,
	0x0a, 0x19, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78,
	0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa5,
	0x02, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x74,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xe8, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xf7, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xba, 0x01, 0x0a, 0x1f,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f,
	0x70, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x50, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x5f, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x02, 0x74, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78,
	0x22, 0x61, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6c, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x19,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x82, 0x01, 0x0a, 0x21, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x22, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xd7,
	0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50,
	0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x74, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x22, 0x26, 0x0a, 0x0a, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x51, 0x0a, 0x0b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x22, 0x56, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x22,
	0x0a, 0x06, 0x4f, 0x54, 0x53, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x4f, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x73, 0x5f,
	0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b,
	0x6f, 0x74, 0x73, 0x42, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x74, 0x73, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74,
	0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x4f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x33,
	0x0a, 0x16, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x4f, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71,
	0x22, 0x4e, 0x0a, 0x0a, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x2b, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x22, 0x5c, 0x0a,
	0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x35, 0x0a, 0x10, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x70, 0x6b, 0x22, 0x57, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x0d, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xa5,
	0x02, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x75,
	0x6d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x61, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8a, 0x0a, 0x0a, 0x10, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x3c, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x3c,
	0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09,
	0x6c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x4b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x74, 0x69,
	0x63, 0x65, 0x50, 0x4b, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x1a, 0x3f, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x73, 0x54, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x64, 0x72, 0x54, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x50, 0x0a, 0x10, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x79, 0x62,
	0x65, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x79, 0x62,
	0x65, 0x72, 0x50, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75,
	0x6d, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x6c, 0x69,
	0x74, 0x68, 0x69, 0x75, 0x6d, 0x50, 0x6b, 0x1a, 0x2c, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a,
	0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x1a, 0x67, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x73, 0x5f, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x73, 0x54, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x47, 0x0a, 0x05, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd4, 0x02, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x69, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x61, 0x73, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xb9, 0x01,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32, 0x89, 0x19, 0x0a, 0x09, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x50, 0x49, 0x12, 0x5d, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4e, 0x65,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41,
	0x64, 0x64, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a,
	0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x7b, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6c, 0x61, 0x76, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x41, 0x64, 0x64, 0x4e,
	0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6c, 0x61,
	0x76, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x5d,
	0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5d, 0x0a,
	0x0d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x15,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0a,
	0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x59, 0x0a, 0x0c,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x69, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x65,
	0x64, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x61,
	0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x78, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78,
	0x6e, 0x12, 0x76, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1f, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x17, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x73, 0x0a, 0x16, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x12, 0x1e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01,
	0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x58,
	0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12,
	0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x6d, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65,
	0x12, 0x1c, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e,
	0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e,
	0x12, 0x1d, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x1c, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x24, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54,
	0x78, 0x6e, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x6d, 0x0a, 0x14, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c,
	0x61, 0x76, 0x65, 0x12, 0x1c, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x78, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65,
	0x54, 0x78, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xa7, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x0f, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x12, 0x0b, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4f, 0x54,
	0x53, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4f, 0x54, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x4b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a,
	0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x64, 0x2d, 0x72, 0x65, 0x73, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x71, 0x72,
	0x6c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qrlwallet_proto_rawDescOnce sync.Once
	file_qrlwallet_proto_rawDescData = file_qrlwallet_proto_rawDesc
)

func file_qrlwallet_proto_rawDescGZIP() []byte {
	file_qrlwallet_proto_rawDescOnce.Do(func() {
		file_qrlwallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_qrlwallet_proto_rawDescData)
	})
	return file_qrlwallet_proto_rawDescData
}

var file_qrlwallet_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_qrlwallet_proto_goTypes = []interface{}{
	(*AddNewAddressReq)(nil),                   // 0: qrl.AddNewAddressReq
	(*AddNewAddressResp)(nil),                  // 1: qrl.AddNewAddressResp
	(*AddNewAddressWithSlavesReq)(nil),         // 2: qrl.AddNewAddressWithSlavesReq
	(*AddAddressFromSeedReq)(nil),              // 3: qrl.AddAddressFromSeedReq
	(*AddAddressFromSeedResp)(nil),             // 4: qrl.AddAddressFromSeedResp
	(*ListAddressesReq)(nil),                   // 5: qrl.ListAddressesReq
	(*ListAddressesResp)(nil),                  // 6: qrl.ListAddressesResp
	(*RemoveAddressReq)(nil),                   // 7: qrl.RemoveAddressReq
	(*RemoveAddressResp)(nil),                  // 8: qrl.RemoveAddressResp
	(*ValidAddressReq)(nil),                    // 9: qrl.ValidAddressReq
	(*ValidAddressResp)(nil),                   // 10: qrl.ValidAddressResp
	(*EncryptWalletReq)(nil),                   // 11: qrl.EncryptWalletReq
	(*EncryptWalletResp)(nil),                  // 12: qrl.EncryptWalletResp
	(*UnlockWalletReq)(nil),                    // 13: qrl.UnlockWalletReq
	(*UnlockWalletResp)(nil),                   // 14: qrl.UnlockWalletResp
	(*LockWalletReq)(nil),                      // 15: qrl.LockWalletReq
	(*LockWalletResp)(nil),                     // 16: qrl.LockWalletResp
	(*GetRecoverySeedsReq)(nil),                // 17: qrl.GetRecoverySeedsReq
	(*GetRecoverySeedsResp)(nil),               // 18: qrl.GetRecoverySeedsResp
	(*GetWalletInfoReq)(nil),                   // 19: qrl.GetWalletInfoReq
	(*GetWalletInfoResp)(nil),                  // 20: qrl.GetWalletInfoResp
	(*RelayTransferTxnReq)(nil),                // 21: qrl.RelayTransferTxnReq
	(*RelayTransferTxnBySlaveReq)(nil),         // 22: qrl.RelayTransferTxnBySlaveReq
	(*RelayMessageTxnReq)(nil),                 // 23: qrl.RelayMessageTxnReq
	(*RelayMessageTxnBySlaveReq)(nil),          // 24: qrl.RelayMessageTxnBySlaveReq
	(*RelayTokenTxnReq)(nil),                   // 25: qrl.RelayTokenTxnReq
	(*RelayTokenTxnBySlaveReq)(nil),            // 26: qrl.RelayTokenTxnBySlaveReq
	(*RelayTransferTokenTxnReq)(nil),           // 27: qrl.RelayTransferTokenTxnReq
	(*RelayTransferTokenTxnBySlaveReq)(nil),    // 28: qrl.RelayTransferTokenTxnBySlaveReq
	(*RelaySlaveTxnReq)(nil),                   // 29: qrl.RelaySlaveTxnReq
	(*RelaySlaveTxnBySlaveReq)(nil),            // 30: qrl.RelaySlaveTxnBySlaveReq
	(*RelayTxnResp)(nil),                       // 31: qrl.RelayTxnResp
	(*ChangePassphraseReq)(nil),                // 32: qrl.ChangePassphraseReq
	(*ChangePassphraseResp)(nil),               // 33: qrl.ChangePassphraseResp
	(*TransactionsByAddressReq)(nil),           // 34: qrl.TransactionsByAddressReq
	(*TransactionsByAddressResp)(nil),          // 35: qrl.TransactionsByAddressResp
	(*PaginatedTransactionsByAddressReq)(nil),  // 36: qrl.PaginatedTransactionsByAddressReq
	(*PaginatedTransactionsByAddressResp)(nil), // 37: qrl.PaginatedTransactionsByAddressResp
	(*TransactionReq)(nil),                     // 38: qrl.TransactionReq
	(*TransactionResp)(nil),                    // 39: qrl.TransactionResp
	(*BalanceReq)(nil),                         // 40: qrl.BalanceReq
	(*BalanceResp)(nil),                        // 41: qrl.BalanceResp
	(*TotalBalanceReq)(nil),                    // 42: qrl.TotalBalanceReq
	(*TotalBalanceResp)(nil),                   // 43: qrl.TotalBalanceResp
	(*OTSReq)(nil),                             // 44: qrl.OTSReq
	(*OTSResp)(nil),                            // 45: qrl.OTSResp
	(*HeightReq)(nil),                          // 46: qrl.HeightReq
	(*HeightResp)(nil),                         // 47: qrl.HeightResp
	(*BlockReq)(nil),                           // 48: qrl.BlockReq
	(*BlockResp)(nil),                          // 49: qrl.BlockResp
	(*BlockByNumberReq)(nil),                   // 50: qrl.BlockByNumberReq
	(*AddressFromPKReq)(nil),                   // 51: qrl.AddressFromPKReq
	(*AddressFromPKResp)(nil),                  // 52: qrl.AddressFromPKResp
	(*NodeInfoReq)(nil),                        // 53: qrl.NodeInfoReq
	(*NodeInfoResp)(nil),                       // 54: qrl.NodeInfoResp
	(*PlainGenesisBalance)(nil),                // 55: qrl.PlainGenesisBalance
	(*PlainAddressAmount)(nil),                 // 56: qrl.PlainAddressAmount
	(*PlainTransaction)(nil),                   // 57: qrl.PlainTransaction
	(*PlainBlockHeader)(nil),                   // 58: qrl.PlainBlockHeader
	(*PlainBlock)(nil),                         // 59: qrl.PlainBlock
	(*PlainTransaction_Transfer)(nil),          // 60: qrl.PlainTransaction.Transfer
	(*PlainTransaction_CoinBase)(nil),          // 61: qrl.PlainTransaction.CoinBase
	(*PlainTransaction_LatticePublicKey)(nil),  // 62: qrl.PlainTransaction.LatticePublicKey
	(*PlainTransaction_Message)(nil),           // 63: qrl.PlainTransaction.Message
	(*PlainTransaction_Token)(nil),             // 64: qrl.PlainTransaction.Token
	(*PlainTransaction_TransferToken)(nil),     // 65: qrl.PlainTransaction.TransferToken
	(*PlainTransaction_Slave)(nil),             // 66: qrl.PlainTransaction.Slave
	(*generated.MiniTransaction)(nil),          // 67: qrl.MiniTransaction
}
var file_qrlwallet_proto_depIdxs = []int32{
	57, // 0: qrl.RelayTxnResp.tx:type_name -> qrl.PlainTransaction
	67, // 1: qrl.TransactionsByAddressResp.mini_transactions:type_name -> qrl.MiniTransaction
	67, // 2: qrl.PaginatedTransactionsByAddressResp.mini_transactions:type_name -> qrl.MiniTransaction
	57, // 3: qrl.TransactionResp.tx:type_name -> qrl.PlainTransaction
	59, // 4: qrl.BlockResp.block:type_name -> qrl.PlainBlock
	60, // 5: qrl.PlainTransaction.transfer:type_name -> qrl.PlainTransaction.Transfer
	61, // 6: qrl.PlainTransaction.coinbase:type_name -> qrl.PlainTransaction.CoinBase
	62, // 7: qrl.PlainTransaction.latticePK:type_name -> qrl.PlainTransaction.LatticePublicKey
	63, // 8: qrl.PlainTransaction.message:type_name -> qrl.PlainTransaction.Message
	64, // 9: qrl.PlainTransaction.token:type_name -> qrl.PlainTransaction.Token
	65, // 10: qrl.PlainTransaction.transfer_token:type_name -> qrl.PlainTransaction.TransferToken
	66, // 11: qrl.PlainTransaction.slave:type_name -> qrl.PlainTransaction.Slave
	58, // 12: qrl.PlainBlock.header:type_name -> qrl.PlainBlockHeader
	57, // 13: qrl.PlainBlock.transactions:type_name -> qrl.PlainTransaction
	55, // 14: qrl.PlainBlock.genesis_balance:type_name -> qrl.PlainGenesisBalance
	56, // 15: qrl.PlainTransaction.Token.initial_balances:type_name -> qrl.PlainAddressAmount
	0,  // 16: qrl.WalletAPI.AddNewAddress:input_type -> qrl.AddNewAddressReq
	2,  // 17: qrl.WalletAPI.AddNewAddressWithSlaves:input_type -> qrl.AddNewAddressWithSlavesReq
	9,  // 18: qrl.WalletAPI.IsValidAddress:input_type -> qrl.ValidAddressReq
	5,  // 19: qrl.WalletAPI.ListAddresses:input_type -> qrl.ListAddressesReq
	7,  // 20: qrl.WalletAPI.RemoveAddress:input_type -> qrl.RemoveAddressReq
	11, // 21: qrl.WalletAPI.EncryptWallet:input_type -> qrl.EncryptWalletReq
	15, // 22: qrl.WalletAPI.LockWallet:input_type -> qrl.LockWalletReq
	13, // 23: qrl.WalletAPI.UnlockWallet:input_type -> qrl.UnlockWalletReq
	17, // 24: qrl.WalletAPI.GetRecoverySeeds:input_type -> qrl.GetRecoverySeedsReq
	19, // 25: qrl.WalletAPI.GetWalletInfo:input_type -> qrl.GetWalletInfoReq
	21, // 26: qrl.WalletAPI.RelayTransferTxn:input_type -> qrl.RelayTransferTxnReq
	22, // 27: qrl.WalletAPI.RelayTransferTxnBySlave:input_type -> qrl.RelayTransferTxnBySlaveReq
	23, // 28: qrl.WalletAPI.RelayMessageTxn:input_type -> qrl.RelayMessageTxnReq
	24, // 29: qrl.WalletAPI.RelayMessageTxnBySlave:input_type -> qrl.RelayMessageTxnBySlaveReq
	25, // 30: qrl.WalletAPI.RelayTokenTxn:input_type -> qrl.RelayTokenTxnReq
	26, // 31: qrl.WalletAPI.RelayTokenTxnBySlave:input_type -> qrl.RelayTokenTxnBySlaveReq
	27, // 32: qrl.WalletAPI.RelayTransferTokenTxn:input_type -> qrl.RelayTransferTokenTxnReq
	28, // 33: qrl.WalletAPI.RelayTransferTokenTxnBySlave:input_type -> qrl.RelayTransferTokenTxnBySlaveReq
	29, // 34: qrl.WalletAPI.RelaySlaveTxn:input_type -> qrl.RelaySlaveTxnReq
	30, // 35: qrl.WalletAPI.RelaySlaveTxnBySlave:input_type -> qrl.RelaySlaveTxnBySlaveReq
	32, // 36: qrl.WalletAPI.ChangePassphrase:input_type -> qrl.ChangePassphraseReq
	34, // 37: qrl.WalletAPI.GetTransactionsByAddress:input_type -> qrl.TransactionsByAddressReq
	36, // 38: qrl.WalletAPI.GetPaginatedTransactionsByAddress:input_type -> qrl.PaginatedTransactionsByAddressReq
	38, // 39: qrl.WalletAPI.GetTransaction:input_type -> qrl.TransactionReq
	40, // 40: qrl.WalletAPI.GetBalance:input_type -> qrl.BalanceReq
	42, // 41: qrl.WalletAPI.GetTotalBalance:input_type -> qrl.TotalBalanceReq
	44, // 42: qrl.WalletAPI.GetOTS:input_type -> qrl.OTSReq
	46, // 43: qrl.WalletAPI.GetHeight:input_type -> qrl.HeightReq
	48, // 44: qrl.WalletAPI.GetBlock:input_type -> qrl.BlockReq
	50, // 45: qrl.WalletAPI.GetBlockByNumber:input_type -> qrl.BlockByNumberReq
	51, // 46: qrl.WalletAPI.GetAddressFromPK:input_type -> qrl.AddressFromPKReq
	53, // 47: qrl.WalletAPI.GetNodeInfo:input_type -> qrl.NodeInfoReq
	1,  // 48: qrl.WalletAPI.AddNewAddress:output_type -> qrl.AddNewAddressResp
	1,  // 49: qrl.WalletAPI.AddNewAddressWithSlaves:output_type -> qrl.AddNewAddressResp
	10, // 50: qrl.WalletAPI.IsValidAddress:output_type -> qrl.ValidAddressResp
	6,  // 51: qrl.WalletAPI.ListAddresses:output_type -> qrl.ListAddressesResp
	8,  // 52: qrl.WalletAPI.RemoveAddress:output_type -> qrl.RemoveAddressResp
	12, // 53: qrl.WalletAPI.EncryptWallet:output_type -> qrl.EncryptWalletResp
	16, // 54: qrl.WalletAPI.LockWallet:output_type -> qrl.LockWalletResp
	14, // 55: qrl.WalletAPI.UnlockWallet:output_type -> qrl.UnlockWalletResp
	18, // 56: qrl.WalletAPI.GetRecoverySeeds:output_type -> qrl.GetRecoverySeedsResp
	20, // 57: qrl.WalletAPI.GetWalletInfo:output_type -> qrl.GetWalletInfoResp
	31, // 58: qrl.WalletAPI.RelayTransferTxn:output_type -> qrl.RelayTxnResp
	31, // 59: qrl.WalletAPI.RelayTransferTxnBySlave:output_type -> qrl.RelayTxnResp
	31, // 60: qrl.WalletAPI.RelayMessageTxn:output_type -> qrl.RelayTxnResp
	31, // 61: qrl.WalletAPI.RelayMessageTxnBySlave:output_type -> qrl.RelayTxnResp
	31, // 62: qrl.WalletAPI.RelayTokenTxn:output_type -> qrl.RelayTxnResp
	31, // 63: qrl.WalletAPI.RelayTokenTxnBySlave:output_type -> qrl.RelayTxnResp
	31, // 64: qrl.WalletAPI.RelayTransferTokenTxn:output_type -> qrl.RelayTxnResp
	31, // 65: qrl.WalletAPI.RelayTransferTokenTxnBySlave:output_type -> qrl.RelayTxnResp
	31, // 66: qrl.WalletAPI.RelaySlaveTxn:output_type -> qrl.RelayTxnResp
	31, // 67: qrl.WalletAPI.RelaySlaveTxnBySlave:output_type -> qrl.RelayTxnResp
	33, // 68: qrl.WalletAPI.ChangePassphrase:output_type -> qrl.ChangePassphraseResp
	35, // 69: qrl.WalletAPI.GetTransactionsByAddress:output_type -> qrl.TransactionsByAddressResp
	37, // 70: qrl.WalletAPI.GetPaginatedTransactionsByAddress:output_type -> qrl.PaginatedTransactionsByAddressResp
	39, // 71: qrl.WalletAPI.GetTransaction:output_type -> qrl.TransactionResp
	41, // 72: qrl.WalletAPI.GetBalance:output_type -> qrl.BalanceResp
	43, // 73: qrl.WalletAPI.GetTotalBalance:output_type -> qrl.TotalBalanceResp
	45, // 74: qrl.WalletAPI.GetOTS:output_type -> qrl.OTSResp
	47, // 75: qrl.WalletAPI.GetHeight:output_type -> qrl.HeightResp
	49, // 76: qrl.WalletAPI.GetBlock:output_type -> qrl.BlockResp
	49, // 77: qrl.WalletAPI.GetBlockByNumber:output_type -> qrl.BlockResp
	52, // 78: qrl.WalletAPI.GetAddressFromPK:output_type -> qrl.AddressFromPKResp
	54, // 79: qrl.WalletAPI.GetNodeInfo:output_type -> qrl.NodeInfoResp
	48, // [48:80] is the sub-list for method output_type
	16, // [16:48] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_qrlwallet_proto_init() }
func file_qrlwallet_proto_init() {
	if File_qrlwallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qrlwallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewAddressWithSlavesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressFromSeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressFromSeedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAddressesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAddressesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecoverySeedsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecoverySeedsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTxnBySlaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayMessageTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayMessageTxnBySlaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTokenTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTokenTxnBySlaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTokenTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTokenTxnBySlaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySlaveTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySlaveTxnBySlaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTxnResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePassphraseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePassphraseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsByAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsByAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedTransactionsByAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedTransactionsByAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeightReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeightResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockByNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFromPKReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFromPKResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainGenesisBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainAddressAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_CoinBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_LatticePublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_TransferToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrlwallet_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainTransaction_Slave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qrlwallet_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*PlainTransaction_Transfer_)(nil),
		(*PlainTransaction_Coinbase)(nil),
		(*PlainTransaction_LatticePK)(nil),
		(*PlainTransaction_Message_)(nil),
		(*PlainTransaction_Token_)(nil),
		(*PlainTransaction_TransferToken_)(nil),
		(*PlainTransaction_Slave_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qrlwallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qrlwallet_proto_goTypes,
		DependencyIndexes: file_qrlwallet_proto_depIdxs,
		MessageInfos:      file_qrlwallet_proto_msgTypes,
	}.Build()
	File_qrlwallet_proto = out.File
	file_qrlwallet_proto_rawDesc = nil
	file_qrlwallet_proto_goTypes = nil
	file_qrlwallet_proto_depIdxs = nil
}
