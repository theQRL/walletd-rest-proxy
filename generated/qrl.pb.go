// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: qrl.proto

package generated

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetLatestDataReq_Filter int32

const (
	GetLatestDataReq_ALL                      GetLatestDataReq_Filter = 0
	GetLatestDataReq_BLOCKHEADERS             GetLatestDataReq_Filter = 1
	GetLatestDataReq_TRANSACTIONS             GetLatestDataReq_Filter = 2
	GetLatestDataReq_TRANSACTIONS_UNCONFIRMED GetLatestDataReq_Filter = 3
)

// Enum value maps for GetLatestDataReq_Filter.
var (
	GetLatestDataReq_Filter_name = map[int32]string{
		0: "ALL",
		1: "BLOCKHEADERS",
		2: "TRANSACTIONS",
		3: "TRANSACTIONS_UNCONFIRMED",
	}
	GetLatestDataReq_Filter_value = map[string]int32{
		"ALL":                      0,
		"BLOCKHEADERS":             1,
		"TRANSACTIONS":             2,
		"TRANSACTIONS_UNCONFIRMED": 3,
	}
)

func (x GetLatestDataReq_Filter) Enum() *GetLatestDataReq_Filter {
	p := new(GetLatestDataReq_Filter)
	*p = x
	return p
}

func (x GetLatestDataReq_Filter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetLatestDataReq_Filter) Descriptor() protoreflect.EnumDescriptor {
	return file_qrl_proto_enumTypes[0].Descriptor()
}

func (GetLatestDataReq_Filter) Type() protoreflect.EnumType {
	return &file_qrl_proto_enumTypes[0]
}

func (x GetLatestDataReq_Filter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetLatestDataReq_Filter.Descriptor instead.
func (GetLatestDataReq_Filter) EnumDescriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{16, 0}
}

type PushTransactionResp_ResponseCode int32

const (
	PushTransactionResp_UNKNOWN           PushTransactionResp_ResponseCode = 0
	PushTransactionResp_ERROR             PushTransactionResp_ResponseCode = 1
	PushTransactionResp_VALIDATION_FAILED PushTransactionResp_ResponseCode = 2
	PushTransactionResp_SUBMITTED         PushTransactionResp_ResponseCode = 3
)

// Enum value maps for PushTransactionResp_ResponseCode.
var (
	PushTransactionResp_ResponseCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "ERROR",
		2: "VALIDATION_FAILED",
		3: "SUBMITTED",
	}
	PushTransactionResp_ResponseCode_value = map[string]int32{
		"UNKNOWN":           0,
		"ERROR":             1,
		"VALIDATION_FAILED": 2,
		"SUBMITTED":         3,
	}
)

func (x PushTransactionResp_ResponseCode) Enum() *PushTransactionResp_ResponseCode {
	p := new(PushTransactionResp_ResponseCode)
	*p = x
	return p
}

func (x PushTransactionResp_ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushTransactionResp_ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_qrl_proto_enumTypes[1].Descriptor()
}

func (PushTransactionResp_ResponseCode) Type() protoreflect.EnumType {
	return &file_qrl_proto_enumTypes[1]
}

func (x PushTransactionResp_ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushTransactionResp_ResponseCode.Descriptor instead.
func (PushTransactionResp_ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{21, 0}
}

type NodeInfo_State int32

const (
	NodeInfo_UNKNOWN  NodeInfo_State = 0
	NodeInfo_UNSYNCED NodeInfo_State = 1
	NodeInfo_SYNCING  NodeInfo_State = 2
	NodeInfo_SYNCED   NodeInfo_State = 3
	NodeInfo_FORKED   NodeInfo_State = 4
)

// Enum value maps for NodeInfo_State.
var (
	NodeInfo_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNSYNCED",
		2: "SYNCING",
		3: "SYNCED",
		4: "FORKED",
	}
	NodeInfo_State_value = map[string]int32{
		"UNKNOWN":  0,
		"UNSYNCED": 1,
		"SYNCING":  2,
		"SYNCED":   3,
		"FORKED":   4,
	}
)

func (x NodeInfo_State) Enum() *NodeInfo_State {
	p := new(NodeInfo_State)
	*p = x
	return p
}

func (x NodeInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_qrl_proto_enumTypes[2].Descriptor()
}

func (NodeInfo_State) Type() protoreflect.EnumType {
	return &file_qrl_proto_enumTypes[2]
}

func (x NodeInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeInfo_State.Descriptor instead.
func (NodeInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{43, 0}
}

//*
// Empty message definition
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{0}
}

//*
// Represents a query to get node state
type GetNodeStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNodeStateReq) Reset() {
	*x = GetNodeStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStateReq) ProtoMessage() {}

func (x *GetNodeStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStateReq.ProtoReflect.Descriptor instead.
func (*GetNodeStateReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{1}
}

//*
// Represents the reply message to node state query
type GetNodeStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NodeInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetNodeStateResp) Reset() {
	*x = GetNodeStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStateResp) ProtoMessage() {}

func (x *GetNodeStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStateResp.ProtoReflect.Descriptor instead.
func (*GetNodeStateResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{2}
}

func (x *GetNodeStateResp) GetInfo() *NodeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//*
// Represents a query to get known peers
type GetKnownPeersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetKnownPeersReq) Reset() {
	*x = GetKnownPeersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnownPeersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnownPeersReq) ProtoMessage() {}

func (x *GetKnownPeersReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnownPeersReq.ProtoReflect.Descriptor instead.
func (*GetKnownPeersReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{3}
}

//*
// Represents the reply message to known peers query
type GetKnownPeersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo   *NodeInfo `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`       // NodeInfo object containing node state information
	KnownPeers []*Peer   `protobuf:"bytes,2,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"` // List of Peer objects containing peer nodes detailed information
}

func (x *GetKnownPeersResp) Reset() {
	*x = GetKnownPeersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnownPeersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnownPeersResp) ProtoMessage() {}

func (x *GetKnownPeersResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnownPeersResp.ProtoReflect.Descriptor instead.
func (*GetKnownPeersResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{4}
}

func (x *GetKnownPeersResp) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *GetKnownPeersResp) GetKnownPeers() []*Peer {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

//*
// Represents a query to get connected peers stat
type GetPeersStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPeersStatReq) Reset() {
	*x = GetPeersStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersStatReq) ProtoMessage() {}

func (x *GetPeersStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersStatReq.ProtoReflect.Descriptor instead.
func (*GetPeersStatReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{5}
}

//*
// Represents the reply message to peers stat query
type GetPeersStatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeersStat []*PeerStat `protobuf:"bytes,1,rep,name=peers_stat,json=peersStat,proto3" json:"peers_stat,omitempty"` // PeerState object contains peer_ip, port and peer state information
}

func (x *GetPeersStatResp) Reset() {
	*x = GetPeersStatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersStatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersStatResp) ProtoMessage() {}

func (x *GetPeersStatResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersStatResp.ProtoReflect.Descriptor instead.
func (*GetPeersStatResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{6}
}

func (x *GetPeersStatResp) GetPeersStat() []*PeerStat {
	if x != nil {
		return x.PeersStat
	}
	return nil
}

//*
// Represents a query to get statistics about node
type GetStatsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeTimeseries bool `protobuf:"varint,1,opt,name=include_timeseries,json=includeTimeseries,proto3" json:"include_timeseries,omitempty"` // Boolean to define if block timeseries should be included in reply or not
}

func (x *GetStatsReq) Reset() {
	*x = GetStatsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsReq) ProtoMessage() {}

func (x *GetStatsReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsReq.ProtoReflect.Descriptor instead.
func (*GetStatsReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{7}
}

func (x *GetStatsReq) GetIncludeTimeseries() bool {
	if x != nil {
		return x.IncludeTimeseries
	}
	return false
}

//*
// Represents the reply message to get statistics about node
type GetStatsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo         *NodeInfo         `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`                            // NodeInfo object containing node state information
	Epoch            uint64            `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`                                                 // Current epoch
	UptimeNetwork    uint64            `protobuf:"varint,3,opt,name=uptime_network,json=uptimeNetwork,proto3" json:"uptime_network,omitempty"`            // Indicates uptime in seconds
	BlockLastReward  uint64            `protobuf:"varint,4,opt,name=block_last_reward,json=blockLastReward,proto3" json:"block_last_reward,omitempty"`    // Block reward
	BlockTimeMean    uint64            `protobuf:"varint,5,opt,name=block_time_mean,json=blockTimeMean,proto3" json:"block_time_mean,omitempty"`          // Blocktime average
	BlockTimeSd      uint64            `protobuf:"varint,6,opt,name=block_time_sd,json=blockTimeSd,proto3" json:"block_time_sd,omitempty"`                // Blocktime standrad deviation
	CoinsTotalSupply uint64            `protobuf:"varint,7,opt,name=coins_total_supply,json=coinsTotalSupply,proto3" json:"coins_total_supply,omitempty"` // Total coins supply
	CoinsEmitted     uint64            `protobuf:"varint,8,opt,name=coins_emitted,json=coinsEmitted,proto3" json:"coins_emitted,omitempty"`               // Total coins emitted
	BlockTimeseries  []*BlockDataPoint `protobuf:"bytes,9,rep,name=block_timeseries,json=blockTimeseries,proto3" json:"block_timeseries,omitempty"`
}

func (x *GetStatsResp) Reset() {
	*x = GetStatsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResp) ProtoMessage() {}

func (x *GetStatsResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResp.ProtoReflect.Descriptor instead.
func (*GetStatsResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{8}
}

func (x *GetStatsResp) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *GetStatsResp) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *GetStatsResp) GetUptimeNetwork() uint64 {
	if x != nil {
		return x.UptimeNetwork
	}
	return 0
}

func (x *GetStatsResp) GetBlockLastReward() uint64 {
	if x != nil {
		return x.BlockLastReward
	}
	return 0
}

func (x *GetStatsResp) GetBlockTimeMean() uint64 {
	if x != nil {
		return x.BlockTimeMean
	}
	return 0
}

func (x *GetStatsResp) GetBlockTimeSd() uint64 {
	if x != nil {
		return x.BlockTimeSd
	}
	return 0
}

func (x *GetStatsResp) GetCoinsTotalSupply() uint64 {
	if x != nil {
		return x.CoinsTotalSupply
	}
	return 0
}

func (x *GetStatsResp) GetCoinsEmitted() uint64 {
	if x != nil {
		return x.CoinsEmitted
	}
	return 0
}

func (x *GetStatsResp) GetBlockTimeseries() []*BlockDataPoint {
	if x != nil {
		return x.BlockTimeseries
	}
	return nil
}

type GetAddressFromPKReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pk []byte `protobuf:"bytes,1,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *GetAddressFromPKReq) Reset() {
	*x = GetAddressFromPKReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressFromPKReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressFromPKReq) ProtoMessage() {}

func (x *GetAddressFromPKReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressFromPKReq.ProtoReflect.Descriptor instead.
func (*GetAddressFromPKReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{9}
}

func (x *GetAddressFromPKReq) GetPk() []byte {
	if x != nil {
		return x.Pk
	}
	return nil
}

type GetAddressFromPKResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressFromPKResp) Reset() {
	*x = GetAddressFromPKResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressFromPKResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressFromPKResp) ProtoMessage() {}

func (x *GetAddressFromPKResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressFromPKResp.ProtoReflect.Descriptor instead.
func (*GetAddressFromPKResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{10}
}

func (x *GetAddressFromPKResp) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

//*
// BlockDataPoint message definition
type BlockDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number         uint64  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`        // Block number
	Difficulty     string  `protobuf:"bytes,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"` // Block difficulty
	Timestamp      uint64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`  // Block timestamp
	TimeLast       uint64  `protobuf:"varint,4,opt,name=time_last,json=timeLast,proto3" json:"time_last,omitempty"`
	TimeMovavg     uint64  `protobuf:"varint,5,opt,name=time_movavg,json=timeMovavg,proto3" json:"time_movavg,omitempty"`
	HashPower      float32 `protobuf:"fixed32,6,opt,name=hash_power,json=hashPower,proto3" json:"hash_power,omitempty"`                // Hash power
	HeaderHash     []byte  `protobuf:"bytes,7,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`               // Block header hash
	HeaderHashPrev []byte  `protobuf:"bytes,8,opt,name=header_hash_prev,json=headerHashPrev,proto3" json:"header_hash_prev,omitempty"` // Previous block's header hash
}

func (x *BlockDataPoint) Reset() {
	*x = BlockDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDataPoint) ProtoMessage() {}

func (x *BlockDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDataPoint.ProtoReflect.Descriptor instead.
func (*BlockDataPoint) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{11}
}

func (x *BlockDataPoint) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BlockDataPoint) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *BlockDataPoint) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockDataPoint) GetTimeLast() uint64 {
	if x != nil {
		return x.TimeLast
	}
	return 0
}

func (x *BlockDataPoint) GetTimeMovavg() uint64 {
	if x != nil {
		return x.TimeMovavg
	}
	return 0
}

func (x *BlockDataPoint) GetHashPower() float32 {
	if x != nil {
		return x.HashPower
	}
	return 0
}

func (x *BlockDataPoint) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *BlockDataPoint) GetHeaderHashPrev() []byte {
	if x != nil {
		return x.HeaderHashPrev
	}
	return nil
}

type GetAddressStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressStateReq) Reset() {
	*x = GetAddressStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressStateReq) ProtoMessage() {}

func (x *GetAddressStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressStateReq.ProtoReflect.Descriptor instead.
func (*GetAddressStateReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{12}
}

func (x *GetAddressStateReq) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetAddressStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *AddressState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetAddressStateResp) Reset() {
	*x = GetAddressStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressStateResp) ProtoMessage() {}

func (x *GetAddressStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressStateResp.ProtoReflect.Descriptor instead.
func (*GetAddressStateResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{13}
}

func (x *GetAddressStateResp) GetState() *AddressState {
	if x != nil {
		return x.State
	}
	return nil
}

type GetObjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetObjectReq) Reset() {
	*x = GetObjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectReq) ProtoMessage() {}

func (x *GetObjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectReq.ProtoReflect.Descriptor instead.
func (*GetObjectReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{14}
}

func (x *GetObjectReq) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type GetObjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	// Types that are assignable to Result:
	//	*GetObjectResp_AddressState
	//	*GetObjectResp_Transaction
	//	*GetObjectResp_BlockExtended
	Result isGetObjectResp_Result `protobuf_oneof:"result"`
}

func (x *GetObjectResp) Reset() {
	*x = GetObjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResp) ProtoMessage() {}

func (x *GetObjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResp.ProtoReflect.Descriptor instead.
func (*GetObjectResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{15}
}

func (x *GetObjectResp) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (m *GetObjectResp) GetResult() isGetObjectResp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetObjectResp) GetAddressState() *AddressState {
	if x, ok := x.GetResult().(*GetObjectResp_AddressState); ok {
		return x.AddressState
	}
	return nil
}

func (x *GetObjectResp) GetTransaction() *TransactionExtended {
	if x, ok := x.GetResult().(*GetObjectResp_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *GetObjectResp) GetBlockExtended() *BlockExtended {
	if x, ok := x.GetResult().(*GetObjectResp_BlockExtended); ok {
		return x.BlockExtended
	}
	return nil
}

type isGetObjectResp_Result interface {
	isGetObjectResp_Result()
}

type GetObjectResp_AddressState struct {
	AddressState *AddressState `protobuf:"bytes,2,opt,name=address_state,json=addressState,proto3,oneof"`
}

type GetObjectResp_Transaction struct {
	Transaction *TransactionExtended `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type GetObjectResp_BlockExtended struct {
	BlockExtended *BlockExtended `protobuf:"bytes,4,opt,name=block_extended,json=blockExtended,proto3,oneof"`
}

func (*GetObjectResp_AddressState) isGetObjectResp_Result() {}

func (*GetObjectResp_Transaction) isGetObjectResp_Result() {}

func (*GetObjectResp_BlockExtended) isGetObjectResp_Result() {}

type GetLatestDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter   GetLatestDataReq_Filter `protobuf:"varint,1,opt,name=filter,proto3,enum=qrl.GetLatestDataReq_Filter" json:"filter,omitempty"`
	Offset   uint32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`     // Offset in the result list (works backwards in this case)
	Quantity uint32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"` // Number of items to retrive. Capped at 100
}

func (x *GetLatestDataReq) Reset() {
	*x = GetLatestDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestDataReq) ProtoMessage() {}

func (x *GetLatestDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestDataReq.ProtoReflect.Descriptor instead.
func (*GetLatestDataReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{16}
}

func (x *GetLatestDataReq) GetFilter() GetLatestDataReq_Filter {
	if x != nil {
		return x.Filter
	}
	return GetLatestDataReq_ALL
}

func (x *GetLatestDataReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLatestDataReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetLatestDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockheaders            []*BlockHeaderExtended `protobuf:"bytes,1,rep,name=blockheaders,proto3" json:"blockheaders,omitempty"`
	Transactions            []*TransactionExtended `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TransactionsUnconfirmed []*TransactionExtended `protobuf:"bytes,3,rep,name=transactions_unconfirmed,json=transactionsUnconfirmed,proto3" json:"transactions_unconfirmed,omitempty"`
}

func (x *GetLatestDataResp) Reset() {
	*x = GetLatestDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestDataResp) ProtoMessage() {}

func (x *GetLatestDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestDataResp.ProtoReflect.Descriptor instead.
func (*GetLatestDataResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{17}
}

func (x *GetLatestDataResp) GetBlockheaders() []*BlockHeaderExtended {
	if x != nil {
		return x.Blockheaders
	}
	return nil
}

func (x *GetLatestDataResp) GetTransactions() []*TransactionExtended {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetLatestDataResp) GetTransactionsUnconfirmed() []*TransactionExtended {
	if x != nil {
		return x.TransactionsUnconfirmed
	}
	return nil
}

type TransferCoinsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr  []byte   `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`    // Transaction source address
	AddressesTo [][]byte `protobuf:"bytes,2,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"` // Transaction destination address
	Amounts     []uint64 `protobuf:"varint,3,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`                    // Amount. It should be expressed in Shor
	Fee         uint64   `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`                                   // Fee. It should be expressed in Shor
	XmssPk      []byte   `protobuf:"bytes,5,opt,name=xmss_pk,json=xmssPk,proto3" json:"xmss_pk,omitempty"`                // XMSS Public key
}

func (x *TransferCoinsReq) Reset() {
	*x = TransferCoinsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCoinsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsReq) ProtoMessage() {}

func (x *TransferCoinsReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsReq.ProtoReflect.Descriptor instead.
func (*TransferCoinsReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{18}
}

func (x *TransferCoinsReq) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *TransferCoinsReq) GetAddressesTo() [][]byte {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *TransferCoinsReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *TransferCoinsReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransferCoinsReq) GetXmssPk() []byte {
	if x != nil {
		return x.XmssPk
	}
	return nil
}

type TransferCoinsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtendedTransactionUnsigned *TransactionExtended `protobuf:"bytes,1,opt,name=extended_transaction_unsigned,json=extendedTransactionUnsigned,proto3" json:"extended_transaction_unsigned,omitempty"`
}

func (x *TransferCoinsResp) Reset() {
	*x = TransferCoinsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCoinsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsResp) ProtoMessage() {}

func (x *TransferCoinsResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsResp.ProtoReflect.Descriptor instead.
func (*TransferCoinsResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{19}
}

func (x *TransferCoinsResp) GetExtendedTransactionUnsigned() *TransactionExtended {
	if x != nil {
		return x.ExtendedTransactionUnsigned
	}
	return nil
}

type PushTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionSigned *Transaction `protobuf:"bytes,1,opt,name=transaction_signed,json=transactionSigned,proto3" json:"transaction_signed,omitempty"`
}

func (x *PushTransactionReq) Reset() {
	*x = PushTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTransactionReq) ProtoMessage() {}

func (x *PushTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTransactionReq.ProtoReflect.Descriptor instead.
func (*PushTransactionReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{20}
}

func (x *PushTransactionReq) GetTransactionSigned() *Transaction {
	if x != nil {
		return x.TransactionSigned
	}
	return nil
}

type PushTransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode        PushTransactionResp_ResponseCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=qrl.PushTransactionResp_ResponseCode" json:"error_code,omitempty"`
	ErrorDescription string                           `protobuf:"bytes,2,opt,name=error_description,json=errorDescription,proto3" json:"error_description,omitempty"`
	TxHash           []byte                           `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *PushTransactionResp) Reset() {
	*x = PushTransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTransactionResp) ProtoMessage() {}

func (x *PushTransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTransactionResp.ProtoReflect.Descriptor instead.
func (*PushTransactionResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{21}
}

func (x *PushTransactionResp) GetErrorCode() PushTransactionResp_ResponseCode {
	if x != nil {
		return x.ErrorCode
	}
	return PushTransactionResp_UNKNOWN
}

func (x *PushTransactionResp) GetErrorDescription() string {
	if x != nil {
		return x.ErrorDescription
	}
	return ""
}

func (x *PushTransactionResp) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type MessageTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr []byte `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	Message    []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Fee        uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	XmssPk     []byte `protobuf:"bytes,4,opt,name=xmss_pk,json=xmssPk,proto3" json:"xmss_pk,omitempty"`
}

func (x *MessageTxnReq) Reset() {
	*x = MessageTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTxnReq) ProtoMessage() {}

func (x *MessageTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTxnReq.ProtoReflect.Descriptor instead.
func (*MessageTxnReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{22}
}

func (x *MessageTxnReq) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *MessageTxnReq) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *MessageTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *MessageTxnReq) GetXmssPk() []byte {
	if x != nil {
		return x.XmssPk
	}
	return nil
}

type TokenTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr      []byte           `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	Symbol          []byte           `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name            []byte           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Owner           []byte           `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Decimals        uint64           `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	InitialBalances []*AddressAmount `protobuf:"bytes,6,rep,name=initial_balances,json=initialBalances,proto3" json:"initial_balances,omitempty"`
	Fee             uint64           `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	XmssPk          []byte           `protobuf:"bytes,8,opt,name=xmss_pk,json=xmssPk,proto3" json:"xmss_pk,omitempty"`
}

func (x *TokenTxnReq) Reset() {
	*x = TokenTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTxnReq) ProtoMessage() {}

func (x *TokenTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTxnReq.ProtoReflect.Descriptor instead.
func (*TokenTxnReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{23}
}

func (x *TokenTxnReq) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *TokenTxnReq) GetSymbol() []byte {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *TokenTxnReq) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *TokenTxnReq) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *TokenTxnReq) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenTxnReq) GetInitialBalances() []*AddressAmount {
	if x != nil {
		return x.InitialBalances
	}
	return nil
}

func (x *TokenTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TokenTxnReq) GetXmssPk() []byte {
	if x != nil {
		return x.XmssPk
	}
	return nil
}

type TransferTokenTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr  []byte   `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	AddressesTo [][]byte `protobuf:"bytes,2,rep,name=addresses_to,json=addressesTo,proto3" json:"addresses_to,omitempty"`
	TokenTxhash []byte   `protobuf:"bytes,3,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	Amounts     []uint64 `protobuf:"varint,4,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	Fee         uint64   `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	XmssPk      []byte   `protobuf:"bytes,6,opt,name=xmss_pk,json=xmssPk,proto3" json:"xmss_pk,omitempty"`
}

func (x *TransferTokenTxnReq) Reset() {
	*x = TransferTokenTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTokenTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTokenTxnReq) ProtoMessage() {}

func (x *TransferTokenTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTokenTxnReq.ProtoReflect.Descriptor instead.
func (*TransferTokenTxnReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{24}
}

func (x *TransferTokenTxnReq) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *TransferTokenTxnReq) GetAddressesTo() [][]byte {
	if x != nil {
		return x.AddressesTo
	}
	return nil
}

func (x *TransferTokenTxnReq) GetTokenTxhash() []byte {
	if x != nil {
		return x.TokenTxhash
	}
	return nil
}

func (x *TransferTokenTxnReq) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *TransferTokenTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransferTokenTxnReq) GetXmssPk() []byte {
	if x != nil {
		return x.XmssPk
	}
	return nil
}

type SlaveTxnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr  []byte   `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	SlavePks    [][]byte `protobuf:"bytes,2,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	AccessTypes []uint32 `protobuf:"varint,3,rep,packed,name=access_types,json=accessTypes,proto3" json:"access_types,omitempty"`
	Fee         uint64   `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	XmssPk      []byte   `protobuf:"bytes,5,opt,name=xmss_pk,json=xmssPk,proto3" json:"xmss_pk,omitempty"`
}

func (x *SlaveTxnReq) Reset() {
	*x = SlaveTxnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlaveTxnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlaveTxnReq) ProtoMessage() {}

func (x *SlaveTxnReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlaveTxnReq.ProtoReflect.Descriptor instead.
func (*SlaveTxnReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{25}
}

func (x *SlaveTxnReq) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *SlaveTxnReq) GetSlavePks() [][]byte {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *SlaveTxnReq) GetAccessTypes() []uint32 {
	if x != nil {
		return x.AccessTypes
	}
	return nil
}

func (x *SlaveTxnReq) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *SlaveTxnReq) GetXmssPk() []byte {
	if x != nil {
		return x.XmssPk
	}
	return nil
}

type MiniTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash string `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Out             bool   `protobuf:"varint,2,opt,name=out,proto3" json:"out,omitempty"`
	Amount          uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MiniTransaction) Reset() {
	*x = MiniTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniTransaction) ProtoMessage() {}

func (x *MiniTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniTransaction.ProtoReflect.Descriptor instead.
func (*MiniTransaction) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{26}
}

func (x *MiniTransaction) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *MiniTransaction) GetOut() bool {
	if x != nil {
		return x.Out
	}
	return false
}

func (x *MiniTransaction) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetTransactionsByAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetTransactionsByAddressReq) Reset() {
	*x = GetTransactionsByAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsByAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsByAddressReq) ProtoMessage() {}

func (x *GetTransactionsByAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsByAddressReq.ProtoReflect.Descriptor instead.
func (*GetTransactionsByAddressReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{27}
}

func (x *GetTransactionsByAddressReq) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetTransactionsByAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiniTransactions []*MiniTransaction `protobuf:"bytes,1,rep,name=mini_transactions,json=miniTransactions,proto3" json:"mini_transactions,omitempty"`
	Balance          uint64             `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetTransactionsByAddressResp) Reset() {
	*x = GetTransactionsByAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsByAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsByAddressResp) ProtoMessage() {}

func (x *GetTransactionsByAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsByAddressResp.ProtoReflect.Descriptor instead.
func (*GetTransactionsByAddressResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{28}
}

func (x *GetTransactionsByAddressResp) GetMiniTransactions() []*MiniTransaction {
	if x != nil {
		return x.MiniTransactions
	}
	return nil
}

func (x *GetTransactionsByAddressResp) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type GetTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash []byte `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *GetTransactionReq) Reset() {
	*x = GetTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionReq) ProtoMessage() {}

func (x *GetTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionReq.ProtoReflect.Descriptor instead.
func (*GetTransactionReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{29}
}

func (x *GetTransactionReq) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type GetTransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx              *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Confirmations   uint64       `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockNumber     uint64       `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockHeaderHash []byte       `protobuf:"bytes,4,opt,name=block_header_hash,json=blockHeaderHash,proto3" json:"block_header_hash,omitempty"`
}

func (x *GetTransactionResp) Reset() {
	*x = GetTransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResp) ProtoMessage() {}

func (x *GetTransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResp.ProtoReflect.Descriptor instead.
func (*GetTransactionResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{30}
}

func (x *GetTransactionResp) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *GetTransactionResp) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetTransactionResp) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *GetTransactionResp) GetBlockHeaderHash() []byte {
	if x != nil {
		return x.BlockHeaderHash
	}
	return nil
}

type GetBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetBalanceReq) Reset() {
	*x = GetBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceReq) ProtoMessage() {}

func (x *GetBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceReq.ProtoReflect.Descriptor instead.
func (*GetBalanceReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{31}
}

func (x *GetBalanceReq) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResp) Reset() {
	*x = GetBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResp) ProtoMessage() {}

func (x *GetBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResp.ProtoReflect.Descriptor instead.
func (*GetBalanceResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{32}
}

func (x *GetBalanceResp) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type GetOTSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetOTSReq) Reset() {
	*x = GetOTSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOTSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOTSReq) ProtoMessage() {}

func (x *GetOTSReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOTSReq.ProtoReflect.Descriptor instead.
func (*GetOTSReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{33}
}

func (x *GetOTSReq) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetOTSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtsBitfield        [][]byte `protobuf:"bytes,1,rep,name=ots_bitfield,json=otsBitfield,proto3" json:"ots_bitfield,omitempty"`
	NextUnusedOtsIndex uint64   `protobuf:"varint,2,opt,name=next_unused_ots_index,json=nextUnusedOtsIndex,proto3" json:"next_unused_ots_index,omitempty"`
}

func (x *GetOTSResp) Reset() {
	*x = GetOTSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOTSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOTSResp) ProtoMessage() {}

func (x *GetOTSResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOTSResp.ProtoReflect.Descriptor instead.
func (*GetOTSResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{34}
}

func (x *GetOTSResp) GetOtsBitfield() [][]byte {
	if x != nil {
		return x.OtsBitfield
	}
	return nil
}

func (x *GetOTSResp) GetNextUnusedOtsIndex() uint64 {
	if x != nil {
		return x.NextUnusedOtsIndex
	}
	return 0
}

type GetHeightReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHeightReq) Reset() {
	*x = GetHeightReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeightReq) ProtoMessage() {}

func (x *GetHeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeightReq.ProtoReflect.Descriptor instead.
func (*GetHeightReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{35}
}

type GetHeightResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetHeightResp) Reset() {
	*x = GetHeightResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHeightResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeightResp) ProtoMessage() {}

func (x *GetHeightResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeightResp.ProtoReflect.Descriptor instead.
func (*GetHeightResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{36}
}

func (x *GetHeightResp) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderHash []byte `protobuf:"bytes,1,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
}

func (x *GetBlockReq) Reset() {
	*x = GetBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockReq) ProtoMessage() {}

func (x *GetBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockReq.ProtoReflect.Descriptor instead.
func (*GetBlockReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{37}
}

func (x *GetBlockReq) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

type GetBlockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockResp) Reset() {
	*x = GetBlockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResp) ProtoMessage() {}

func (x *GetBlockResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResp.ProtoReflect.Descriptor instead.
func (*GetBlockResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{38}
}

func (x *GetBlockResp) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetBlockByNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetBlockByNumberReq) Reset() {
	*x = GetBlockByNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByNumberReq) ProtoMessage() {}

func (x *GetBlockByNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByNumberReq.ProtoReflect.Descriptor instead.
func (*GetBlockByNumberReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{39}
}

func (x *GetBlockByNumberReq) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type GetBlockByNumberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockByNumberResp) Reset() {
	*x = GetBlockByNumberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByNumberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByNumberResp) ProtoMessage() {}

func (x *GetBlockByNumberResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByNumberResp.ProtoReflect.Descriptor instead.
func (*GetBlockByNumberResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{40}
}

func (x *GetBlockByNumberResp) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetLocalAddressesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLocalAddressesReq) Reset() {
	*x = GetLocalAddressesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocalAddressesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocalAddressesReq) ProtoMessage() {}

func (x *GetLocalAddressesReq) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocalAddressesReq.ProtoReflect.Descriptor instead.
func (*GetLocalAddressesReq) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{41}
}

type GetLocalAddressesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses [][]byte `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GetLocalAddressesResp) Reset() {
	*x = GetLocalAddressesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocalAddressesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocalAddressesResp) ProtoMessage() {}

func (x *GetLocalAddressesResp) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocalAddressesResp.ProtoReflect.Descriptor instead.
func (*GetLocalAddressesResp) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{42}
}

func (x *GetLocalAddressesResp) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        string         `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	State          NodeInfo_State `protobuf:"varint,2,opt,name=state,proto3,enum=qrl.NodeInfo_State" json:"state,omitempty"`
	NumConnections uint32         `protobuf:"varint,3,opt,name=num_connections,json=numConnections,proto3" json:"num_connections,omitempty"`
	NumKnownPeers  uint32         `protobuf:"varint,4,opt,name=num_known_peers,json=numKnownPeers,proto3" json:"num_known_peers,omitempty"`
	Uptime         uint64         `protobuf:"varint,5,opt,name=uptime,proto3" json:"uptime,omitempty"` // Uptime in seconds
	BlockHeight    uint64         `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockLastHash  []byte         `protobuf:"bytes,7,opt,name=block_last_hash,json=blockLastHash,proto3" json:"block_last_hash,omitempty"`
	NetworkId      string         `protobuf:"bytes,8,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{43}
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeInfo) GetState() NodeInfo_State {
	if x != nil {
		return x.State
	}
	return NodeInfo_UNKNOWN
}

func (x *NodeInfo) GetNumConnections() uint32 {
	if x != nil {
		return x.NumConnections
	}
	return 0
}

func (x *NodeInfo) GetNumKnownPeers() uint32 {
	if x != nil {
		return x.NumKnownPeers
	}
	return 0
}

func (x *NodeInfo) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *NodeInfo) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *NodeInfo) GetBlockLastHash() []byte {
	if x != nil {
		return x.BlockLastHash
	}
	return nil
}

func (x *NodeInfo) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type StoredPeers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *StoredPeers) Reset() {
	*x = StoredPeers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoredPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoredPeers) ProtoMessage() {}

func (x *StoredPeers) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoredPeers.ProtoReflect.Descriptor instead.
func (*StoredPeers) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{44}
}

func (x *StoredPeers) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{45}
}

func (x *Peer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type AddressState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            []byte            `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance            uint64            `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce              uint64            `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"` // FIXME: Discuss. 32 or 64 bits?
	OtsBitfield        [][]byte          `protobuf:"bytes,4,rep,name=ots_bitfield,json=otsBitfield,proto3" json:"ots_bitfield,omitempty"`
	TransactionHashes  [][]byte          `protobuf:"bytes,5,rep,name=transaction_hashes,json=transactionHashes,proto3" json:"transaction_hashes,omitempty"`
	Tokens             map[string]uint64 `protobuf:"bytes,6,rep,name=tokens,proto3" json:"tokens,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LatticePKList      []*LatticePK      `protobuf:"bytes,7,rep,name=latticePK_list,json=latticePKList,proto3" json:"latticePK_list,omitempty"`
	SlavePksAccessType map[string]uint32 `protobuf:"bytes,8,rep,name=slave_pks_access_type,json=slavePksAccessType,proto3" json:"slave_pks_access_type,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	OtsCounter         uint64            `protobuf:"varint,9,opt,name=ots_counter,json=otsCounter,proto3" json:"ots_counter,omitempty"`
}

func (x *AddressState) Reset() {
	*x = AddressState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressState) ProtoMessage() {}

func (x *AddressState) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressState.ProtoReflect.Descriptor instead.
func (*AddressState) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{46}
}

func (x *AddressState) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AddressState) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AddressState) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressState) GetOtsBitfield() [][]byte {
	if x != nil {
		return x.OtsBitfield
	}
	return nil
}

func (x *AddressState) GetTransactionHashes() [][]byte {
	if x != nil {
		return x.TransactionHashes
	}
	return nil
}

func (x *AddressState) GetTokens() map[string]uint64 {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *AddressState) GetLatticePKList() []*LatticePK {
	if x != nil {
		return x.LatticePKList
	}
	return nil
}

func (x *AddressState) GetSlavePksAccessType() map[string]uint32 {
	if x != nil {
		return x.SlavePksAccessType
	}
	return nil
}

func (x *AddressState) GetOtsCounter() uint64 {
	if x != nil {
		return x.OtsCounter
	}
	return 0
}

type LatticePK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txhash      []byte `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	DilithiumPk []byte `protobuf:"bytes,2,opt,name=dilithium_pk,json=dilithiumPk,proto3" json:"dilithium_pk,omitempty"`
	KyberPk     []byte `protobuf:"bytes,3,opt,name=kyber_pk,json=kyberPk,proto3" json:"kyber_pk,omitempty"`
}

func (x *LatticePK) Reset() {
	*x = LatticePK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatticePK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatticePK) ProtoMessage() {}

func (x *LatticePK) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatticePK.ProtoReflect.Descriptor instead.
func (*LatticePK) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{47}
}

func (x *LatticePK) GetTxhash() []byte {
	if x != nil {
		return x.Txhash
	}
	return nil
}

func (x *LatticePK) GetDilithiumPk() []byte {
	if x != nil {
		return x.DilithiumPk
	}
	return nil
}

func (x *LatticePK) GetKyberPk() []byte {
	if x != nil {
		return x.KyberPk
	}
	return nil
}

type AddressAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *AddressAmount) Reset() {
	*x = AddressAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressAmount) ProtoMessage() {}

func (x *AddressAmount) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressAmount.ProtoReflect.Descriptor instead.
func (*AddressAmount) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{48}
}

func (x *AddressAmount) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AddressAmount) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Header
	HashHeader       []byte `protobuf:"bytes,1,opt,name=hash_header,json=hashHeader,proto3" json:"hash_header,omitempty"`
	BlockNumber      uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TimestampSeconds uint64 `protobuf:"varint,3,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	HashHeaderPrev   []byte `protobuf:"bytes,4,opt,name=hash_header_prev,json=hashHeaderPrev,proto3" json:"hash_header_prev,omitempty"`
	RewardBlock      uint64 `protobuf:"varint,5,opt,name=reward_block,json=rewardBlock,proto3" json:"reward_block,omitempty"`
	RewardFee        uint64 `protobuf:"varint,6,opt,name=reward_fee,json=rewardFee,proto3" json:"reward_fee,omitempty"`
	MerkleRoot       []byte `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	MiningNonce      uint32 `protobuf:"varint,8,opt,name=mining_nonce,json=miningNonce,proto3" json:"mining_nonce,omitempty"`
	ExtraNonce       uint64 `protobuf:"varint,9,opt,name=extra_nonce,json=extraNonce,proto3" json:"extra_nonce,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{49}
}

func (x *BlockHeader) GetHashHeader() []byte {
	if x != nil {
		return x.HashHeader
	}
	return nil
}

func (x *BlockHeader) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockHeader) GetTimestampSeconds() uint64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

func (x *BlockHeader) GetHashHeaderPrev() []byte {
	if x != nil {
		return x.HashHeaderPrev
	}
	return nil
}

func (x *BlockHeader) GetRewardBlock() uint64 {
	if x != nil {
		return x.RewardBlock
	}
	return 0
}

func (x *BlockHeader) GetRewardFee() uint64 {
	if x != nil {
		return x.RewardFee
	}
	return 0
}

func (x *BlockHeader) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *BlockHeader) GetMiningNonce() uint32 {
	if x != nil {
		return x.MiningNonce
	}
	return 0
}

func (x *BlockHeader) GetExtraNonce() uint64 {
	if x != nil {
		return x.ExtraNonce
	}
	return 0
}

type BlockHeaderExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           *BlockHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TransactionCount *TransactionCount `protobuf:"bytes,2,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
}

func (x *BlockHeaderExtended) Reset() {
	*x = BlockHeaderExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeaderExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeaderExtended) ProtoMessage() {}

func (x *BlockHeaderExtended) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeaderExtended.ProtoReflect.Descriptor instead.
func (*BlockHeaderExtended) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{50}
}

func (x *BlockHeaderExtended) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BlockHeaderExtended) GetTransactionCount() *TransactionCount {
	if x != nil {
		return x.TransactionCount
	}
	return nil
}

type TransactionCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count map[uint32]uint32 `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TransactionCount) Reset() {
	*x = TransactionCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCount) ProtoMessage() {}

func (x *TransactionCount) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCount.ProtoReflect.Descriptor instead.
func (*TransactionCount) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{51}
}

func (x *TransactionCount) GetCount() map[uint32]uint32 {
	if x != nil {
		return x.Count
	}
	return nil
}

type TransactionExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Tx               *Transaction `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	AddrFrom         []byte       `protobuf:"bytes,3,opt,name=addr_from,json=addrFrom,proto3" json:"addr_from,omitempty"`
	Size             uint64       `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	TimestampSeconds uint64       `protobuf:"varint,5,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
}

func (x *TransactionExtended) Reset() {
	*x = TransactionExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionExtended) ProtoMessage() {}

func (x *TransactionExtended) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionExtended.ProtoReflect.Descriptor instead.
func (*TransactionExtended) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{52}
}

func (x *TransactionExtended) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TransactionExtended) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionExtended) GetAddrFrom() []byte {
	if x != nil {
		return x.AddrFrom
	}
	return nil
}

func (x *TransactionExtended) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TransactionExtended) GetTimestampSeconds() uint64 {
	if x != nil {
		return x.TimestampSeconds
	}
	return 0
}

type BlockExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header               *BlockHeader           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ExtendedTransactions []*TransactionExtended `protobuf:"bytes,2,rep,name=extended_transactions,json=extendedTransactions,proto3" json:"extended_transactions,omitempty"`
	// This is only applicable to genesis blocks
	GenesisBalance []*GenesisBalance `protobuf:"bytes,3,rep,name=genesis_balance,json=genesisBalance,proto3" json:"genesis_balance,omitempty"`
	Size           uint64            `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *BlockExtended) Reset() {
	*x = BlockExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockExtended) ProtoMessage() {}

func (x *BlockExtended) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockExtended.ProtoReflect.Descriptor instead.
func (*BlockExtended) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{53}
}

func (x *BlockExtended) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BlockExtended) GetExtendedTransactions() []*TransactionExtended {
	if x != nil {
		return x.ExtendedTransactions
	}
	return nil
}

func (x *BlockExtended) GetGenesisBalance() []*GenesisBalance {
	if x != nil {
		return x.GenesisBalance
	}
	return nil
}

func (x *BlockExtended) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header       *BlockHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	// This is only applicable to genesis blocks
	GenesisBalance []*GenesisBalance `protobuf:"bytes,3,rep,name=genesis_balance,json=genesisBalance,proto3" json:"genesis_balance,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{54}
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetGenesisBalance() []*GenesisBalance {
	if x != nil {
		return x.GenesisBalance
	}
	return nil
}

type GenesisBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // Address is string only here to increase visibility
	Balance uint64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GenesisBalance) Reset() {
	*x = GenesisBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisBalance) ProtoMessage() {}

func (x *GenesisBalance) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisBalance.ProtoReflect.Descriptor instead.
func (*GenesisBalance) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{55}
}

func (x *GenesisBalance) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GenesisBalance) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type BlockMetaDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumberHashes []*BlockMetaData `protobuf:"bytes,1,rep,name=block_number_hashes,json=blockNumberHashes,proto3" json:"block_number_hashes,omitempty"`
}

func (x *BlockMetaDataList) Reset() {
	*x = BlockMetaDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetaDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetaDataList) ProtoMessage() {}

func (x *BlockMetaDataList) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetaDataList.ProtoReflect.Descriptor instead.
func (*BlockMetaDataList) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{56}
}

func (x *BlockMetaDataList) GetBlockNumberHashes() []*BlockMetaData {
	if x != nil {
		return x.BlockNumberHashes
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAddr      []byte `protobuf:"bytes,1,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	Fee             uint64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	PublicKey       []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature       []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce           uint64 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TransactionHash []byte `protobuf:"bytes,6,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	// Types that are assignable to TransactionType:
	//	*Transaction_Transfer_
	//	*Transaction_Coinbase
	//	*Transaction_LatticePK
	//	*Transaction_Message_
	//	*Transaction_Token_
	//	*Transaction_TransferToken_
	//	*Transaction_Slave_
	TransactionType isTransaction_TransactionType `protobuf_oneof:"transactionType"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57}
}

func (x *Transaction) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *Transaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Transaction) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (m *Transaction) GetTransactionType() isTransaction_TransactionType {
	if m != nil {
		return m.TransactionType
	}
	return nil
}

func (x *Transaction) GetTransfer() *Transaction_Transfer {
	if x, ok := x.GetTransactionType().(*Transaction_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

func (x *Transaction) GetCoinbase() *Transaction_CoinBase {
	if x, ok := x.GetTransactionType().(*Transaction_Coinbase); ok {
		return x.Coinbase
	}
	return nil
}

func (x *Transaction) GetLatticePK() *Transaction_LatticePublicKey {
	if x, ok := x.GetTransactionType().(*Transaction_LatticePK); ok {
		return x.LatticePK
	}
	return nil
}

func (x *Transaction) GetMessage() *Transaction_Message {
	if x, ok := x.GetTransactionType().(*Transaction_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *Transaction) GetToken() *Transaction_Token {
	if x, ok := x.GetTransactionType().(*Transaction_Token_); ok {
		return x.Token
	}
	return nil
}

func (x *Transaction) GetTransferToken() *Transaction_TransferToken {
	if x, ok := x.GetTransactionType().(*Transaction_TransferToken_); ok {
		return x.TransferToken
	}
	return nil
}

func (x *Transaction) GetSlave() *Transaction_Slave {
	if x, ok := x.GetTransactionType().(*Transaction_Slave_); ok {
		return x.Slave
	}
	return nil
}

type isTransaction_TransactionType interface {
	isTransaction_TransactionType()
}

type Transaction_Transfer_ struct {
	Transfer *Transaction_Transfer `protobuf:"bytes,7,opt,name=transfer,proto3,oneof"`
}

type Transaction_Coinbase struct {
	Coinbase *Transaction_CoinBase `protobuf:"bytes,8,opt,name=coinbase,proto3,oneof"`
}

type Transaction_LatticePK struct {
	LatticePK *Transaction_LatticePublicKey `protobuf:"bytes,9,opt,name=latticePK,proto3,oneof"`
}

type Transaction_Message_ struct {
	Message *Transaction_Message `protobuf:"bytes,10,opt,name=message,proto3,oneof"`
}

type Transaction_Token_ struct {
	Token *Transaction_Token `protobuf:"bytes,11,opt,name=token,proto3,oneof"`
}

type Transaction_TransferToken_ struct {
	TransferToken *Transaction_TransferToken `protobuf:"bytes,12,opt,name=transfer_token,json=transferToken,proto3,oneof"`
}

type Transaction_Slave_ struct {
	Slave *Transaction_Slave `protobuf:"bytes,13,opt,name=slave,proto3,oneof"`
}

func (*Transaction_Transfer_) isTransaction_TransactionType() {}

func (*Transaction_Coinbase) isTransaction_TransactionType() {}

func (*Transaction_LatticePK) isTransaction_TransactionType() {}

func (*Transaction_Message_) isTransaction_TransactionType() {}

func (*Transaction_Token_) isTransaction_TransactionType() {}

func (*Transaction_TransferToken_) isTransaction_TransactionType() {}

func (*Transaction_Slave_) isTransaction_TransactionType() {}

type TokenList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenTxhash [][]byte `protobuf:"bytes,1,rep,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
}

func (x *TokenList) Reset() {
	*x = TokenList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenList) ProtoMessage() {}

func (x *TokenList) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenList.ProtoReflect.Descriptor instead.
func (*TokenList) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{58}
}

func (x *TokenList) GetTokenTxhash() [][]byte {
	if x != nil {
		return x.TokenTxhash
	}
	return nil
}

type TokenMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenTxhash           []byte   `protobuf:"bytes,1,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	TransferTokenTxHashes [][]byte `protobuf:"bytes,2,rep,name=transfer_token_tx_hashes,json=transferTokenTxHashes,proto3" json:"transfer_token_tx_hashes,omitempty"`
}

func (x *TokenMetadata) Reset() {
	*x = TokenMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenMetadata) ProtoMessage() {}

func (x *TokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenMetadata.ProtoReflect.Descriptor instead.
func (*TokenMetadata) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{59}
}

func (x *TokenMetadata) GetTokenTxhash() []byte {
	if x != nil {
		return x.TokenTxhash
	}
	return nil
}

func (x *TokenMetadata) GetTransferTokenTxHashes() [][]byte {
	if x != nil {
		return x.TransferTokenTxHashes
	}
	return nil
}

type EncryptedEphemeralMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId   []byte                             `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // b'NEW' or PRF
	Ttl     uint64                             `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`                 // Expiry Timestamp in seconds
	Ttr     uint64                             `protobuf:"varint,3,opt,name=ttr,proto3" json:"ttr,omitempty"`                 // Time to relay
	Channel *EncryptedEphemeralMessage_Channel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Nonce   uint64                             `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`    // nonce
	Payload []byte                             `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"` // JSON content, encrypted by aes256_symkey
}

func (x *EncryptedEphemeralMessage) Reset() {
	*x = EncryptedEphemeralMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedEphemeralMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedEphemeralMessage) ProtoMessage() {}

func (x *EncryptedEphemeralMessage) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedEphemeralMessage.ProtoReflect.Descriptor instead.
func (*EncryptedEphemeralMessage) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{60}
}

func (x *EncryptedEphemeralMessage) GetMsgId() []byte {
	if x != nil {
		return x.MsgId
	}
	return nil
}

func (x *EncryptedEphemeralMessage) GetTtl() uint64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *EncryptedEphemeralMessage) GetTtr() uint64 {
	if x != nil {
		return x.Ttr
	}
	return 0
}

func (x *EncryptedEphemeralMessage) GetChannel() *EncryptedEphemeralMessage_Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *EncryptedEphemeralMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EncryptedEphemeralMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses [][]byte `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AddressList) Reset() {
	*x = AddressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressList) ProtoMessage() {}

func (x *AddressList) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressList.ProtoReflect.Descriptor instead.
func (*AddressList) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{61}
}

func (x *AddressList) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type BlockHeightData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber          uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockHeaderhash      []byte `protobuf:"bytes,2,opt,name=block_headerhash,json=blockHeaderhash,proto3" json:"block_headerhash,omitempty"`
	CumulativeDifficulty []byte `protobuf:"bytes,3,opt,name=cumulative_difficulty,json=cumulativeDifficulty,proto3" json:"cumulative_difficulty,omitempty"`
}

func (x *BlockHeightData) Reset() {
	*x = BlockHeightData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightData) ProtoMessage() {}

func (x *BlockHeightData) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeightData.ProtoReflect.Descriptor instead.
func (*BlockHeightData) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{62}
}

func (x *BlockHeightData) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockHeightData) GetBlockHeaderhash() []byte {
	if x != nil {
		return x.BlockHeaderhash
	}
	return nil
}

func (x *BlockHeightData) GetCumulativeDifficulty() []byte {
	if x != nil {
		return x.CumulativeDifficulty
	}
	return nil
}

type BlockMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockDifficulty      []byte   `protobuf:"bytes,1,opt,name=block_difficulty,json=blockDifficulty,proto3" json:"block_difficulty,omitempty"`
	CumulativeDifficulty []byte   `protobuf:"bytes,2,opt,name=cumulative_difficulty,json=cumulativeDifficulty,proto3" json:"cumulative_difficulty,omitempty"`
	ChildHeaderhashes    [][]byte `protobuf:"bytes,3,rep,name=child_headerhashes,json=childHeaderhashes,proto3" json:"child_headerhashes,omitempty"`
	Last_NHeaderhashes   [][]byte `protobuf:"bytes,4,rep,name=last_N_headerhashes,json=lastNHeaderhashes,proto3" json:"last_N_headerhashes,omitempty"` // Keeps last N headerhashes, for measurement of timestamp difference
}

func (x *BlockMetaData) Reset() {
	*x = BlockMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetaData) ProtoMessage() {}

func (x *BlockMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetaData.ProtoReflect.Descriptor instead.
func (*BlockMetaData) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{63}
}

func (x *BlockMetaData) GetBlockDifficulty() []byte {
	if x != nil {
		return x.BlockDifficulty
	}
	return nil
}

func (x *BlockMetaData) GetCumulativeDifficulty() []byte {
	if x != nil {
		return x.CumulativeDifficulty
	}
	return nil
}

func (x *BlockMetaData) GetChildHeaderhashes() [][]byte {
	if x != nil {
		return x.ChildHeaderhashes
	}
	return nil
}

func (x *BlockMetaData) GetLast_NHeaderhashes() [][]byte {
	if x != nil {
		return x.Last_NHeaderhashes
	}
	return nil
}

type BlockNumberMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headerhash     []byte `protobuf:"bytes,1,opt,name=headerhash,proto3" json:"headerhash,omitempty"`
	PrevHeaderhash []byte `protobuf:"bytes,2,opt,name=prev_headerhash,json=prevHeaderhash,proto3" json:"prev_headerhash,omitempty"`
}

func (x *BlockNumberMapping) Reset() {
	*x = BlockNumberMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockNumberMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockNumberMapping) ProtoMessage() {}

func (x *BlockNumberMapping) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockNumberMapping.ProtoReflect.Descriptor instead.
func (*BlockNumberMapping) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{64}
}

func (x *BlockNumberMapping) GetHeaderhash() []byte {
	if x != nil {
		return x.Headerhash
	}
	return nil
}

func (x *BlockNumberMapping) GetPrevHeaderhash() []byte {
	if x != nil {
		return x.PrevHeaderhash
	}
	return nil
}

type StateLoader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses       [][]byte `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	TokenTxhash     [][]byte `protobuf:"bytes,2,rep,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	Txhash          [][]byte `protobuf:"bytes,3,rep,name=txhash,proto3" json:"txhash,omitempty"`
	TotalCoinSupply uint64   `protobuf:"varint,4,opt,name=total_coin_supply,json=totalCoinSupply,proto3" json:"total_coin_supply,omitempty"`
}

func (x *StateLoader) Reset() {
	*x = StateLoader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateLoader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateLoader) ProtoMessage() {}

func (x *StateLoader) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateLoader.ProtoReflect.Descriptor instead.
func (*StateLoader) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{65}
}

func (x *StateLoader) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *StateLoader) GetTokenTxhash() [][]byte {
	if x != nil {
		return x.TokenTxhash
	}
	return nil
}

func (x *StateLoader) GetTxhash() [][]byte {
	if x != nil {
		return x.Txhash
	}
	return nil
}

func (x *StateLoader) GetTotalCoinSupply() uint64 {
	if x != nil {
		return x.TotalCoinSupply
	}
	return 0
}

type StateObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateLoaders [][]byte `protobuf:"bytes,1,rep,name=state_loaders,json=stateLoaders,proto3" json:"state_loaders,omitempty"`
}

func (x *StateObjects) Reset() {
	*x = StateObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateObjects) ProtoMessage() {}

func (x *StateObjects) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateObjects.ProtoReflect.Descriptor instead.
func (*StateObjects) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{66}
}

func (x *StateObjects) GetStateLoaders() [][]byte {
	if x != nil {
		return x.StateLoaders
	}
	return nil
}

type LRUStateCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LRUStateCache) Reset() {
	*x = LRUStateCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LRUStateCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LRUStateCache) ProtoMessage() {}

func (x *LRUStateCache) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LRUStateCache.ProtoReflect.Descriptor instead.
func (*LRUStateCache) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{67}
}

type PeerStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerIp         []byte          `protobuf:"bytes,1,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	Port           uint32          `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	NodeChainState *NodeChainState `protobuf:"bytes,3,opt,name=node_chain_state,json=nodeChainState,proto3" json:"node_chain_state,omitempty"`
}

func (x *PeerStat) Reset() {
	*x = PeerStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerStat) ProtoMessage() {}

func (x *PeerStat) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerStat.ProtoReflect.Descriptor instead.
func (*PeerStat) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{68}
}

func (x *PeerStat) GetPeerIp() []byte {
	if x != nil {
		return x.PeerIp
	}
	return nil
}

func (x *PeerStat) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PeerStat) GetNodeChainState() *NodeChainState {
	if x != nil {
		return x.NodeChainState
	}
	return nil
}

type NodeChainState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber          uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	HeaderHash           []byte `protobuf:"bytes,2,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
	CumulativeDifficulty []byte `protobuf:"bytes,3,opt,name=cumulative_difficulty,json=cumulativeDifficulty,proto3" json:"cumulative_difficulty,omitempty"`
	Version              string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp            uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *NodeChainState) Reset() {
	*x = NodeChainState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeChainState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeChainState) ProtoMessage() {}

func (x *NodeChainState) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeChainState.ProtoReflect.Descriptor instead.
func (*NodeChainState) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{69}
}

func (x *NodeChainState) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NodeChainState) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *NodeChainState) GetCumulativeDifficulty() []byte {
	if x != nil {
		return x.CumulativeDifficulty
	}
	return nil
}

func (x *NodeChainState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeChainState) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type NodeHeaderHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber  uint64   `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Headerhashes [][]byte `protobuf:"bytes,2,rep,name=headerhashes,proto3" json:"headerhashes,omitempty"`
}

func (x *NodeHeaderHash) Reset() {
	*x = NodeHeaderHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHeaderHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHeaderHash) ProtoMessage() {}

func (x *NodeHeaderHash) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHeaderHash.ProtoReflect.Descriptor instead.
func (*NodeHeaderHash) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{70}
}

func (x *NodeHeaderHash) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NodeHeaderHash) GetHeaderhashes() [][]byte {
	if x != nil {
		return x.Headerhashes
	}
	return nil
}

type P2PAcknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesProcessed uint32 `protobuf:"varint,1,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
}

func (x *P2PAcknowledgement) Reset() {
	*x = P2PAcknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PAcknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PAcknowledgement) ProtoMessage() {}

func (x *P2PAcknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PAcknowledgement.ProtoReflect.Descriptor instead.
func (*P2PAcknowledgement) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{71}
}

func (x *P2PAcknowledgement) GetBytesProcessed() uint32 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

type PeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerIp                   []byte   `protobuf:"bytes,1,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	Port                     uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	BannedTimestamp          uint32   `protobuf:"varint,3,opt,name=banned_timestamp,json=bannedTimestamp,proto3" json:"banned_timestamp,omitempty"`
	Credibility              uint32   `protobuf:"varint,4,opt,name=credibility,proto3" json:"credibility,omitempty"`
	LastConnectionsTimestamp []uint32 `protobuf:"varint,5,rep,packed,name=last_connections_timestamp,json=lastConnectionsTimestamp,proto3" json:"last_connections_timestamp,omitempty"`
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{72}
}

func (x *PeerInfo) GetPeerIp() []byte {
	if x != nil {
		return x.PeerIp
	}
	return nil
}

func (x *PeerInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PeerInfo) GetBannedTimestamp() uint32 {
	if x != nil {
		return x.BannedTimestamp
	}
	return 0
}

func (x *PeerInfo) GetCredibility() uint32 {
	if x != nil {
		return x.Credibility
	}
	return 0
}

func (x *PeerInfo) GetLastConnectionsTimestamp() []uint32 {
	if x != nil {
		return x.LastConnectionsTimestamp
	}
	return nil
}

type Peers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerInfoList []*PeerInfo `protobuf:"bytes,1,rep,name=peer_info_list,json=peerInfoList,proto3" json:"peer_info_list,omitempty"`
}

func (x *Peers) Reset() {
	*x = Peers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peers) ProtoMessage() {}

func (x *Peers) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peers.ProtoReflect.Descriptor instead.
func (*Peers) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{73}
}

func (x *Peers) GetPeerInfoList() []*PeerInfo {
	if x != nil {
		return x.PeerInfoList
	}
	return nil
}

//////////
type Transaction_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrsTo [][]byte `protobuf:"bytes,1,rep,name=addrs_to,json=addrsTo,proto3" json:"addrs_to,omitempty"`
	Amounts []uint64 `protobuf:"varint,2,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *Transaction_Transfer) Reset() {
	*x = Transaction_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Transfer) ProtoMessage() {}

func (x *Transaction_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Transfer.ProtoReflect.Descriptor instead.
func (*Transaction_Transfer) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 0}
}

func (x *Transaction_Transfer) GetAddrsTo() [][]byte {
	if x != nil {
		return x.AddrsTo
	}
	return nil
}

func (x *Transaction_Transfer) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type Transaction_CoinBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrTo []byte `protobuf:"bytes,1,opt,name=addr_to,json=addrTo,proto3" json:"addr_to,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transaction_CoinBase) Reset() {
	*x = Transaction_CoinBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_CoinBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_CoinBase) ProtoMessage() {}

func (x *Transaction_CoinBase) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_CoinBase.ProtoReflect.Descriptor instead.
func (*Transaction_CoinBase) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 1}
}

func (x *Transaction_CoinBase) GetAddrTo() []byte {
	if x != nil {
		return x.AddrTo
	}
	return nil
}

func (x *Transaction_CoinBase) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Transaction_LatticePublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KyberPk     []byte `protobuf:"bytes,1,opt,name=kyber_pk,json=kyberPk,proto3" json:"kyber_pk,omitempty"`
	DilithiumPk []byte `protobuf:"bytes,2,opt,name=dilithium_pk,json=dilithiumPk,proto3" json:"dilithium_pk,omitempty"`
}

func (x *Transaction_LatticePublicKey) Reset() {
	*x = Transaction_LatticePublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_LatticePublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_LatticePublicKey) ProtoMessage() {}

func (x *Transaction_LatticePublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_LatticePublicKey.ProtoReflect.Descriptor instead.
func (*Transaction_LatticePublicKey) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 2}
}

func (x *Transaction_LatticePublicKey) GetKyberPk() []byte {
	if x != nil {
		return x.KyberPk
	}
	return nil
}

func (x *Transaction_LatticePublicKey) GetDilithiumPk() []byte {
	if x != nil {
		return x.DilithiumPk
	}
	return nil
}

type Transaction_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHash []byte `protobuf:"bytes,1,opt,name=message_hash,json=messageHash,proto3" json:"message_hash,omitempty"`
}

func (x *Transaction_Message) Reset() {
	*x = Transaction_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Message) ProtoMessage() {}

func (x *Transaction_Message) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Message.ProtoReflect.Descriptor instead.
func (*Transaction_Message) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 3}
}

func (x *Transaction_Message) GetMessageHash() []byte {
	if x != nil {
		return x.MessageHash
	}
	return nil
}

type Transaction_Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol          []byte           `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name            []byte           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner           []byte           `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Decimals        uint64           `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	InitialBalances []*AddressAmount `protobuf:"bytes,5,rep,name=initial_balances,json=initialBalances,proto3" json:"initial_balances,omitempty"`
}

func (x *Transaction_Token) Reset() {
	*x = Transaction_Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Token) ProtoMessage() {}

func (x *Transaction_Token) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Token.ProtoReflect.Descriptor instead.
func (*Transaction_Token) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 4}
}

func (x *Transaction_Token) GetSymbol() []byte {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *Transaction_Token) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Transaction_Token) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Transaction_Token) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Transaction_Token) GetInitialBalances() []*AddressAmount {
	if x != nil {
		return x.InitialBalances
	}
	return nil
}

type Transaction_TransferToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenTxhash []byte   `protobuf:"bytes,1,opt,name=token_txhash,json=tokenTxhash,proto3" json:"token_txhash,omitempty"`
	AddrsTo     [][]byte `protobuf:"bytes,2,rep,name=addrs_to,json=addrsTo,proto3" json:"addrs_to,omitempty"`
	Amounts     []uint64 `protobuf:"varint,3,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *Transaction_TransferToken) Reset() {
	*x = Transaction_TransferToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TransferToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TransferToken) ProtoMessage() {}

func (x *Transaction_TransferToken) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TransferToken.ProtoReflect.Descriptor instead.
func (*Transaction_TransferToken) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 5}
}

func (x *Transaction_TransferToken) GetTokenTxhash() []byte {
	if x != nil {
		return x.TokenTxhash
	}
	return nil
}

func (x *Transaction_TransferToken) GetAddrsTo() [][]byte {
	if x != nil {
		return x.AddrsTo
	}
	return nil
}

func (x *Transaction_TransferToken) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type Transaction_Slave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlavePks    [][]byte `protobuf:"bytes,1,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	AccessTypes []uint32 `protobuf:"varint,2,rep,packed,name=access_types,json=accessTypes,proto3" json:"access_types,omitempty"`
}

func (x *Transaction_Slave) Reset() {
	*x = Transaction_Slave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Slave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Slave) ProtoMessage() {}

func (x *Transaction_Slave) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Slave.ProtoReflect.Descriptor instead.
func (*Transaction_Slave) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{57, 6}
}

func (x *Transaction_Slave) GetSlavePks() [][]byte {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *Transaction_Slave) GetAccessTypes() []uint32 {
	if x != nil {
		return x.AccessTypes
	}
	return nil
}

type EncryptedEphemeralMessage_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncAes256Symkey []byte `protobuf:"bytes,4,opt,name=enc_aes256_symkey,json=encAes256Symkey,proto3" json:"enc_aes256_symkey,omitempty"` // aes256_symkey encrypted by kyber
}

func (x *EncryptedEphemeralMessage_Channel) Reset() {
	*x = EncryptedEphemeralMessage_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrl_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedEphemeralMessage_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedEphemeralMessage_Channel) ProtoMessage() {}

func (x *EncryptedEphemeralMessage_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_qrl_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedEphemeralMessage_Channel.ProtoReflect.Descriptor instead.
func (*EncryptedEphemeralMessage_Channel) Descriptor() ([]byte, []int) {
	return file_qrl_proto_rawDescGZIP(), []int{60, 0}
}

func (x *EncryptedEphemeralMessage_Channel) GetEncAes256Symkey() []byte {
	if x != nil {
		return x.EncAes256Symkey
	}
	return nil
}

var File_qrl_proto protoreflect.FileDescriptor

var file_qrl_proto_rawDesc = []byte{
	0x0a, 0x09, 0x71, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x71, 0x72, 0x6c,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77,
	0x6e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0a, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x22, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x82, 0x03, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x69, 0x6e, 0x73,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x65,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f,
	0x69, 0x6e, 0x73, 0x45, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x10, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x70,
	0x6b, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6d, 0x6f, 0x76, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x76, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x68, 0x61, 0x73, 0x68, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x50, 0x72, 0x65, 0x76, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xe4, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xd1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x53, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52,
	0x4d, 0x45, 0x44, 0x10, 0x03, 0x22, 0xe4, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x22, 0x9b, 0x01, 0x0a,
	0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x78, 0x6d, 0x73, 0x73, 0x5f, 0x70, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x78, 0x6d, 0x73, 0x73, 0x50, 0x6b, 0x22, 0x71, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5c, 0x0a, 0x1d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x52, 0x1b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x55, 0x0a,
	0x12, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x4d, 0x49,
	0x54, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x75, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x78, 0x6d, 0x73, 0x73, 0x5f, 0x70, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x78, 0x6d, 0x73, 0x73, 0x50, 0x6b, 0x22, 0xf6, 0x01,
	0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x10,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x78, 0x6d, 0x73, 0x73, 0x5f, 0x70, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x78, 0x6d, 0x73, 0x73, 0x50, 0x6b, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x78, 0x6d, 0x73, 0x73, 0x5f, 0x70, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x78, 0x6d, 0x73, 0x73, 0x50, 0x6b, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08,
	0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x78, 0x6d, 0x73, 0x73, 0x5f, 0x70, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x78, 0x6d, 0x73, 0x73, 0x50, 0x6b, 0x22, 0x66, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x02, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x54,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x62,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0b, 0x6f, 0x74, 0x73, 0x42, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x31, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6f,
	0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x6e, 0x65, 0x78, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x4f, 0x74, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x2e, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x22, 0x30, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x38, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x22, 0xeb, 0x02, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x75, 0x6d,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61,
	0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x4e, 0x53, 0x59, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e,
	0x43, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x4e, 0x43, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x52, 0x4b, 0x45, 0x44, 0x10, 0x04, 0x22, 0x2e,
	0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x16,
	0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x99, 0x04, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6f, 0x74, 0x73, 0x42, 0x69, 0x74, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x6c, 0x61,
	0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x4b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65,
	0x50, 0x4b, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x4b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x5c, 0x0a, 0x15, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x50, 0x6b, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x1a, 0x39, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x61, 0x0a, 0x09, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x4b, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6c, 0x69, 0x74,
	0x68, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64,
	0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x50, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x79,
	0x62, 0x65, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6b, 0x79,
	0x62, 0x65, 0x72, 0x50, 0x6b, 0x22, 0x41, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcf, 0x02, 0x0a, 0x0b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68,
	0x61, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x84, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x38, 0x0a,
	0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x02, 0x74, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0d, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x14,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3c, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e,
	0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x44,
	0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x13, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xbc, 0x09,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x37,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x42, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x09, 0x6c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x4b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x74, 0x69, 0x63,
	0x65, 0x50, 0x4b, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x1a, 0x3f, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x61, 0x64, 0x64, 0x72, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x50, 0x0a, 0x10, 0x4c, 0x61, 0x74, 0x74, 0x69, 0x63, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x79, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6b, 0x79, 0x62, 0x65, 0x72, 0x50, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d,
	0x50, 0x6b, 0x1a, 0x2c, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x67, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x73, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x1a, 0x47, 0x0a, 0x05, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6c,
	0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x09,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x22, 0x6b, 0x0a, 0x0d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x37, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74,
	0x74, 0x72, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x5f, 0x61, 0x65, 0x73, 0x32, 0x35, 0x36, 0x5f, 0x73, 0x79,
	0x6d, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x41,
	0x65, 0x73, 0x32, 0x35, 0x36, 0x53, 0x79, 0x6d, 0x6b, 0x65, 0x79, 0x22, 0x2b, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x22,
	0xce, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x15,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x4e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x22, 0x5d, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x70, 0x72, 0x65, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x92, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x52, 0x55,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x76, 0x0a, 0x08, 0x50, 0x65,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x57, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22,
	0x3d, 0x0a, 0x12, 0x50, 0x32, 0x50, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0xc2,
	0x01, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x3c, 0x0a, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x0e,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x32, 0xff, 0x0e, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x50, 0x49, 0x12,
	0x56, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12,
	0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x57, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12,
	0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x65, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x15, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x12, 0x18, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x4b, 0x12, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x78, 0x6e, 0x12, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x69, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x51, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x10, 0x2e, 0x71, 0x72, 0x6c,
	0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71,
	0x72, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x10, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x86,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x71, 0x72,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x54,
	0x53, 0x12, 0x0e, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x0b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x47, 0x65, 0x74, 0x4f, 0x54, 0x53, 0x12, 0x4a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x10, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x66, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x71, 0x72, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x71, 0x72, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x32, 0x0a, 0x0a, 0x08, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qrl_proto_rawDescOnce sync.Once
	file_qrl_proto_rawDescData = file_qrl_proto_rawDesc
)

func file_qrl_proto_rawDescGZIP() []byte {
	file_qrl_proto_rawDescOnce.Do(func() {
		file_qrl_proto_rawDescData = protoimpl.X.CompressGZIP(file_qrl_proto_rawDescData)
	})
	return file_qrl_proto_rawDescData
}

var file_qrl_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_qrl_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_qrl_proto_goTypes = []interface{}{
	(GetLatestDataReq_Filter)(0),              // 0: qrl.GetLatestDataReq.Filter
	(PushTransactionResp_ResponseCode)(0),     // 1: qrl.PushTransactionResp.ResponseCode
	(NodeInfo_State)(0),                       // 2: qrl.NodeInfo.State
	(*Empty)(nil),                             // 3: qrl.Empty
	(*GetNodeStateReq)(nil),                   // 4: qrl.GetNodeStateReq
	(*GetNodeStateResp)(nil),                  // 5: qrl.GetNodeStateResp
	(*GetKnownPeersReq)(nil),                  // 6: qrl.GetKnownPeersReq
	(*GetKnownPeersResp)(nil),                 // 7: qrl.GetKnownPeersResp
	(*GetPeersStatReq)(nil),                   // 8: qrl.GetPeersStatReq
	(*GetPeersStatResp)(nil),                  // 9: qrl.GetPeersStatResp
	(*GetStatsReq)(nil),                       // 10: qrl.GetStatsReq
	(*GetStatsResp)(nil),                      // 11: qrl.GetStatsResp
	(*GetAddressFromPKReq)(nil),               // 12: qrl.GetAddressFromPKReq
	(*GetAddressFromPKResp)(nil),              // 13: qrl.GetAddressFromPKResp
	(*BlockDataPoint)(nil),                    // 14: qrl.BlockDataPoint
	(*GetAddressStateReq)(nil),                // 15: qrl.GetAddressStateReq
	(*GetAddressStateResp)(nil),               // 16: qrl.GetAddressStateResp
	(*GetObjectReq)(nil),                      // 17: qrl.GetObjectReq
	(*GetObjectResp)(nil),                     // 18: qrl.GetObjectResp
	(*GetLatestDataReq)(nil),                  // 19: qrl.GetLatestDataReq
	(*GetLatestDataResp)(nil),                 // 20: qrl.GetLatestDataResp
	(*TransferCoinsReq)(nil),                  // 21: qrl.TransferCoinsReq
	(*TransferCoinsResp)(nil),                 // 22: qrl.TransferCoinsResp
	(*PushTransactionReq)(nil),                // 23: qrl.PushTransactionReq
	(*PushTransactionResp)(nil),               // 24: qrl.PushTransactionResp
	(*MessageTxnReq)(nil),                     // 25: qrl.MessageTxnReq
	(*TokenTxnReq)(nil),                       // 26: qrl.TokenTxnReq
	(*TransferTokenTxnReq)(nil),               // 27: qrl.TransferTokenTxnReq
	(*SlaveTxnReq)(nil),                       // 28: qrl.SlaveTxnReq
	(*MiniTransaction)(nil),                   // 29: qrl.MiniTransaction
	(*GetTransactionsByAddressReq)(nil),       // 30: qrl.GetTransactionsByAddressReq
	(*GetTransactionsByAddressResp)(nil),      // 31: qrl.GetTransactionsByAddressResp
	(*GetTransactionReq)(nil),                 // 32: qrl.GetTransactionReq
	(*GetTransactionResp)(nil),                // 33: qrl.GetTransactionResp
	(*GetBalanceReq)(nil),                     // 34: qrl.GetBalanceReq
	(*GetBalanceResp)(nil),                    // 35: qrl.GetBalanceResp
	(*GetOTSReq)(nil),                         // 36: qrl.GetOTSReq
	(*GetOTSResp)(nil),                        // 37: qrl.GetOTSResp
	(*GetHeightReq)(nil),                      // 38: qrl.GetHeightReq
	(*GetHeightResp)(nil),                     // 39: qrl.GetHeightResp
	(*GetBlockReq)(nil),                       // 40: qrl.GetBlockReq
	(*GetBlockResp)(nil),                      // 41: qrl.GetBlockResp
	(*GetBlockByNumberReq)(nil),               // 42: qrl.GetBlockByNumberReq
	(*GetBlockByNumberResp)(nil),              // 43: qrl.GetBlockByNumberResp
	(*GetLocalAddressesReq)(nil),              // 44: qrl.GetLocalAddressesReq
	(*GetLocalAddressesResp)(nil),             // 45: qrl.GetLocalAddressesResp
	(*NodeInfo)(nil),                          // 46: qrl.NodeInfo
	(*StoredPeers)(nil),                       // 47: qrl.StoredPeers
	(*Peer)(nil),                              // 48: qrl.Peer
	(*AddressState)(nil),                      // 49: qrl.AddressState
	(*LatticePK)(nil),                         // 50: qrl.LatticePK
	(*AddressAmount)(nil),                     // 51: qrl.AddressAmount
	(*BlockHeader)(nil),                       // 52: qrl.BlockHeader
	(*BlockHeaderExtended)(nil),               // 53: qrl.BlockHeaderExtended
	(*TransactionCount)(nil),                  // 54: qrl.TransactionCount
	(*TransactionExtended)(nil),               // 55: qrl.TransactionExtended
	(*BlockExtended)(nil),                     // 56: qrl.BlockExtended
	(*Block)(nil),                             // 57: qrl.Block
	(*GenesisBalance)(nil),                    // 58: qrl.GenesisBalance
	(*BlockMetaDataList)(nil),                 // 59: qrl.BlockMetaDataList
	(*Transaction)(nil),                       // 60: qrl.Transaction
	(*TokenList)(nil),                         // 61: qrl.TokenList
	(*TokenMetadata)(nil),                     // 62: qrl.TokenMetadata
	(*EncryptedEphemeralMessage)(nil),         // 63: qrl.EncryptedEphemeralMessage
	(*AddressList)(nil),                       // 64: qrl.AddressList
	(*BlockHeightData)(nil),                   // 65: qrl.BlockHeightData
	(*BlockMetaData)(nil),                     // 66: qrl.BlockMetaData
	(*BlockNumberMapping)(nil),                // 67: qrl.BlockNumberMapping
	(*StateLoader)(nil),                       // 68: qrl.StateLoader
	(*StateObjects)(nil),                      // 69: qrl.StateObjects
	(*LRUStateCache)(nil),                     // 70: qrl.LRUStateCache
	(*PeerStat)(nil),                          // 71: qrl.PeerStat
	(*NodeChainState)(nil),                    // 72: qrl.NodeChainState
	(*NodeHeaderHash)(nil),                    // 73: qrl.NodeHeaderHash
	(*P2PAcknowledgement)(nil),                // 74: qrl.P2PAcknowledgement
	(*PeerInfo)(nil),                          // 75: qrl.PeerInfo
	(*Peers)(nil),                             // 76: qrl.Peers
	nil,                                       // 77: qrl.AddressState.TokensEntry
	nil,                                       // 78: qrl.AddressState.SlavePksAccessTypeEntry
	nil,                                       // 79: qrl.TransactionCount.CountEntry
	(*Transaction_Transfer)(nil),              // 80: qrl.Transaction.Transfer
	(*Transaction_CoinBase)(nil),              // 81: qrl.Transaction.CoinBase
	(*Transaction_LatticePublicKey)(nil),      // 82: qrl.Transaction.LatticePublicKey
	(*Transaction_Message)(nil),               // 83: qrl.Transaction.Message
	(*Transaction_Token)(nil),                 // 84: qrl.Transaction.Token
	(*Transaction_TransferToken)(nil),         // 85: qrl.Transaction.TransferToken
	(*Transaction_Slave)(nil),                 // 86: qrl.Transaction.Slave
	(*EncryptedEphemeralMessage_Channel)(nil), // 87: qrl.EncryptedEphemeralMessage.Channel
}
var file_qrl_proto_depIdxs = []int32{
	46, // 0: qrl.GetNodeStateResp.info:type_name -> qrl.NodeInfo
	46, // 1: qrl.GetKnownPeersResp.node_info:type_name -> qrl.NodeInfo
	48, // 2: qrl.GetKnownPeersResp.known_peers:type_name -> qrl.Peer
	71, // 3: qrl.GetPeersStatResp.peers_stat:type_name -> qrl.PeerStat
	46, // 4: qrl.GetStatsResp.node_info:type_name -> qrl.NodeInfo
	14, // 5: qrl.GetStatsResp.block_timeseries:type_name -> qrl.BlockDataPoint
	49, // 6: qrl.GetAddressStateResp.state:type_name -> qrl.AddressState
	49, // 7: qrl.GetObjectResp.address_state:type_name -> qrl.AddressState
	55, // 8: qrl.GetObjectResp.transaction:type_name -> qrl.TransactionExtended
	56, // 9: qrl.GetObjectResp.block_extended:type_name -> qrl.BlockExtended
	0,  // 10: qrl.GetLatestDataReq.filter:type_name -> qrl.GetLatestDataReq.Filter
	53, // 11: qrl.GetLatestDataResp.blockheaders:type_name -> qrl.BlockHeaderExtended
	55, // 12: qrl.GetLatestDataResp.transactions:type_name -> qrl.TransactionExtended
	55, // 13: qrl.GetLatestDataResp.transactions_unconfirmed:type_name -> qrl.TransactionExtended
	55, // 14: qrl.TransferCoinsResp.extended_transaction_unsigned:type_name -> qrl.TransactionExtended
	60, // 15: qrl.PushTransactionReq.transaction_signed:type_name -> qrl.Transaction
	1,  // 16: qrl.PushTransactionResp.error_code:type_name -> qrl.PushTransactionResp.ResponseCode
	51, // 17: qrl.TokenTxnReq.initial_balances:type_name -> qrl.AddressAmount
	29, // 18: qrl.GetTransactionsByAddressResp.mini_transactions:type_name -> qrl.MiniTransaction
	60, // 19: qrl.GetTransactionResp.tx:type_name -> qrl.Transaction
	57, // 20: qrl.GetBlockResp.block:type_name -> qrl.Block
	57, // 21: qrl.GetBlockByNumberResp.block:type_name -> qrl.Block
	2,  // 22: qrl.NodeInfo.state:type_name -> qrl.NodeInfo.State
	48, // 23: qrl.StoredPeers.peers:type_name -> qrl.Peer
	77, // 24: qrl.AddressState.tokens:type_name -> qrl.AddressState.TokensEntry
	50, // 25: qrl.AddressState.latticePK_list:type_name -> qrl.LatticePK
	78, // 26: qrl.AddressState.slave_pks_access_type:type_name -> qrl.AddressState.SlavePksAccessTypeEntry
	52, // 27: qrl.BlockHeaderExtended.header:type_name -> qrl.BlockHeader
	54, // 28: qrl.BlockHeaderExtended.transaction_count:type_name -> qrl.TransactionCount
	79, // 29: qrl.TransactionCount.count:type_name -> qrl.TransactionCount.CountEntry
	52, // 30: qrl.TransactionExtended.header:type_name -> qrl.BlockHeader
	60, // 31: qrl.TransactionExtended.tx:type_name -> qrl.Transaction
	52, // 32: qrl.BlockExtended.header:type_name -> qrl.BlockHeader
	55, // 33: qrl.BlockExtended.extended_transactions:type_name -> qrl.TransactionExtended
	58, // 34: qrl.BlockExtended.genesis_balance:type_name -> qrl.GenesisBalance
	52, // 35: qrl.Block.header:type_name -> qrl.BlockHeader
	60, // 36: qrl.Block.transactions:type_name -> qrl.Transaction
	58, // 37: qrl.Block.genesis_balance:type_name -> qrl.GenesisBalance
	66, // 38: qrl.BlockMetaDataList.block_number_hashes:type_name -> qrl.BlockMetaData
	80, // 39: qrl.Transaction.transfer:type_name -> qrl.Transaction.Transfer
	81, // 40: qrl.Transaction.coinbase:type_name -> qrl.Transaction.CoinBase
	82, // 41: qrl.Transaction.latticePK:type_name -> qrl.Transaction.LatticePublicKey
	83, // 42: qrl.Transaction.message:type_name -> qrl.Transaction.Message
	84, // 43: qrl.Transaction.token:type_name -> qrl.Transaction.Token
	85, // 44: qrl.Transaction.transfer_token:type_name -> qrl.Transaction.TransferToken
	86, // 45: qrl.Transaction.slave:type_name -> qrl.Transaction.Slave
	87, // 46: qrl.EncryptedEphemeralMessage.channel:type_name -> qrl.EncryptedEphemeralMessage.Channel
	72, // 47: qrl.PeerStat.node_chain_state:type_name -> qrl.NodeChainState
	75, // 48: qrl.Peers.peer_info_list:type_name -> qrl.PeerInfo
	51, // 49: qrl.Transaction.Token.initial_balances:type_name -> qrl.AddressAmount
	4,  // 50: qrl.PublicAPI.GetNodeState:input_type -> qrl.GetNodeStateReq
	6,  // 51: qrl.PublicAPI.GetKnownPeers:input_type -> qrl.GetKnownPeersReq
	8,  // 52: qrl.PublicAPI.GetPeersStat:input_type -> qrl.GetPeersStatReq
	10, // 53: qrl.PublicAPI.GetStats:input_type -> qrl.GetStatsReq
	15, // 54: qrl.PublicAPI.GetAddressState:input_type -> qrl.GetAddressStateReq
	17, // 55: qrl.PublicAPI.GetObject:input_type -> qrl.GetObjectReq
	19, // 56: qrl.PublicAPI.GetLatestData:input_type -> qrl.GetLatestDataReq
	23, // 57: qrl.PublicAPI.PushTransaction:input_type -> qrl.PushTransactionReq
	21, // 58: qrl.PublicAPI.TransferCoins:input_type -> qrl.TransferCoinsReq
	12, // 59: qrl.PublicAPI.GetAddressFromPK:input_type -> qrl.GetAddressFromPKReq
	25, // 60: qrl.PublicAPI.GetMessageTxn:input_type -> qrl.MessageTxnReq
	26, // 61: qrl.PublicAPI.GetTokenTxn:input_type -> qrl.TokenTxnReq
	27, // 62: qrl.PublicAPI.GetTransferTokenTxn:input_type -> qrl.TransferTokenTxnReq
	28, // 63: qrl.PublicAPI.GetSlaveTxn:input_type -> qrl.SlaveTxnReq
	30, // 64: qrl.PublicAPI.GetTransactionsByAddress:input_type -> qrl.GetTransactionsByAddressReq
	32, // 65: qrl.PublicAPI.GetTransaction:input_type -> qrl.GetTransactionReq
	34, // 66: qrl.PublicAPI.GetBalance:input_type -> qrl.GetBalanceReq
	36, // 67: qrl.PublicAPI.GetOTS:input_type -> qrl.GetOTSReq
	38, // 68: qrl.PublicAPI.GetHeight:input_type -> qrl.GetHeightReq
	40, // 69: qrl.PublicAPI.GetBlock:input_type -> qrl.GetBlockReq
	42, // 70: qrl.PublicAPI.GetBlockByNumber:input_type -> qrl.GetBlockByNumberReq
	5,  // 71: qrl.PublicAPI.GetNodeState:output_type -> qrl.GetNodeStateResp
	7,  // 72: qrl.PublicAPI.GetKnownPeers:output_type -> qrl.GetKnownPeersResp
	9,  // 73: qrl.PublicAPI.GetPeersStat:output_type -> qrl.GetPeersStatResp
	11, // 74: qrl.PublicAPI.GetStats:output_type -> qrl.GetStatsResp
	16, // 75: qrl.PublicAPI.GetAddressState:output_type -> qrl.GetAddressStateResp
	18, // 76: qrl.PublicAPI.GetObject:output_type -> qrl.GetObjectResp
	20, // 77: qrl.PublicAPI.GetLatestData:output_type -> qrl.GetLatestDataResp
	24, // 78: qrl.PublicAPI.PushTransaction:output_type -> qrl.PushTransactionResp
	22, // 79: qrl.PublicAPI.TransferCoins:output_type -> qrl.TransferCoinsResp
	13, // 80: qrl.PublicAPI.GetAddressFromPK:output_type -> qrl.GetAddressFromPKResp
	22, // 81: qrl.PublicAPI.GetMessageTxn:output_type -> qrl.TransferCoinsResp
	22, // 82: qrl.PublicAPI.GetTokenTxn:output_type -> qrl.TransferCoinsResp
	22, // 83: qrl.PublicAPI.GetTransferTokenTxn:output_type -> qrl.TransferCoinsResp
	22, // 84: qrl.PublicAPI.GetSlaveTxn:output_type -> qrl.TransferCoinsResp
	31, // 85: qrl.PublicAPI.GetTransactionsByAddress:output_type -> qrl.GetTransactionsByAddressResp
	33, // 86: qrl.PublicAPI.GetTransaction:output_type -> qrl.GetTransactionResp
	35, // 87: qrl.PublicAPI.GetBalance:output_type -> qrl.GetBalanceResp
	37, // 88: qrl.PublicAPI.GetOTS:output_type -> qrl.GetOTSResp
	39, // 89: qrl.PublicAPI.GetHeight:output_type -> qrl.GetHeightResp
	41, // 90: qrl.PublicAPI.GetBlock:output_type -> qrl.GetBlockResp
	43, // 91: qrl.PublicAPI.GetBlockByNumber:output_type -> qrl.GetBlockByNumberResp
	71, // [71:92] is the sub-list for method output_type
	50, // [50:71] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_qrl_proto_init() }
func file_qrl_proto_init() {
	if File_qrl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qrl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnownPeersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKnownPeersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersStatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressFromPKReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressFromPKResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCoinsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCoinsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTokenTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlaveTxnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsByAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsByAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOTSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOTSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHeightReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHeightResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByNumberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocalAddressesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocalAddressesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoredPeers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatticePK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeaderExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetaDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedEphemeralMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockNumberMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateLoader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LRUStateCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeChainState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHeaderHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PAcknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_CoinBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_LatticePublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TransferToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Slave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrl_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedEphemeralMessage_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qrl_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GetObjectResp_AddressState)(nil),
		(*GetObjectResp_Transaction)(nil),
		(*GetObjectResp_BlockExtended)(nil),
	}
	file_qrl_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*Transaction_Transfer_)(nil),
		(*Transaction_Coinbase)(nil),
		(*Transaction_LatticePK)(nil),
		(*Transaction_Message_)(nil),
		(*Transaction_Token_)(nil),
		(*Transaction_TransferToken_)(nil),
		(*Transaction_Slave_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qrl_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_qrl_proto_goTypes,
		DependencyIndexes: file_qrl_proto_depIdxs,
		EnumInfos:         file_qrl_proto_enumTypes,
		MessageInfos:      file_qrl_proto_msgTypes,
	}.Build()
	File_qrl_proto = out.File
	file_qrl_proto_rawDesc = nil
	file_qrl_proto_goTypes = nil
	file_qrl_proto_depIdxs = nil
}
